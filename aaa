--- c.c.ll	2023-04-09 04:58:11.115649422 +0900
+++ c.c.ll2	2023-04-09 04:52:01.112775709 +0900
@@ -204,11 +204,6 @@
 @48 = private unnamed_addr constant [13 x i8] c"./comelang.h\00", align 1
 @"./comelang.h.1" = private unnamed_addr constant [13 x i8] c"./comelang.h\00", align 1
 @49 = private unnamed_addr constant [13 x i8] c"./comelang.h\00", align 1
-@50 = private unnamed_addr constant [13 x i8] c"./comelang.h\00", align 1
-@51 = private unnamed_addr constant [13 x i8] c"./comelang.h\00", align 1
-@52 = private unnamed_addr constant [13 x i8] c"./comelang.h\00", align 1
-@53 = private unnamed_addr constant [13 x i8] c"./comelang.h\00", align 1
-@54 = private unnamed_addr constant [13 x i8] c"./comelang.h\00", align 1
 
 ; Function Attrs: nofree nosync nounwind willreturn
 declare void @llvm.va_start(i8*) #0
@@ -3823,19 +3818,16 @@
   store %list_charpp* %fun_result2, %list_charpp** %c, align 8
   %c4 = load %list_charpp*, %list_charpp** %c, align 8
   %funXX2222 = call i8* @list_operator_load_element_charp(%list_charpp* %c4, i32 0)
+  %element_addressXYXZY = getelementptr inbounds i8, i8* %funXX2222, i32 0
+  %load_element = load i8, i8* %element_addressXYXZY, align 1
   %vtable_obj = load %list_charpp*, %list_charpp** %c, align 8
   %castAK2 = bitcast %list_charpp* %vtable_obj to i8*
   %nullcheckY = icmp eq i8* %castAK2, null
   br i1 %nullcheckY, label %cond_endY, label %cond_blockY
 
-cond_endY:                                        ; preds = %cond_blockY, %entry
-  call void @come_gc_final()
-  ret i32 0
+cond_endY:                                        ; preds = %entry
 
 cond_blockY:                                      ; preds = %entry
-  %castAK = bitcast %list_charpp* %vtable_obj to i8*
-  call void @call_finalizer(i8* bitcast (void (%list_charpp*)* @list_finalize_charp to i8*), i8* %castAK, i32 0)
-  br label %cond_endY
 }
 
 define internal %list_charpp* @list_initialize_with_values_charp(%list_charpp* %0, i32 %1, i8** %2) {
@@ -4217,84 +4209,13 @@
 
 define internal void @list_finalize_charp(%list_charpp* %0) {
 entry:
-  %prev_it = alloca %list_item_charpp*, align 8
-  %it = alloca %list_item_charpp*, align 8
   %self = alloca %list_charpp*, align 8
   %self1 = alloca %list_charpp**, align 8
   store %list_charpp* %0, %list_charpp** %self, align 8
   store %list_charpp** %self, %list_charpp*** %self1, align 8
   %self2 = load %list_charpp*, %list_charpp** %self, align 8
   %unwrap_cast2 = bitcast %list_charpp* %self2 to i8*
-  call void @unwrap_exception(i8* bitcast ([13 x i8]* @49 to i8*), i32 533, i8* %unwrap_cast2)
-  %fieldLLL = getelementptr inbounds %list_charpp, %list_charpp* %self2, i32 0, i32 0
-  %head = load %list_item_charpp*, %list_item_charpp** %fieldLLL, align 8
-  store %list_item_charpp* %head, %list_item_charpp** %it, align 8
-  br label %loop_top_block
-
-loop_top_block:                                   ; preds = %cond_endY15, %entry
-  %it3 = load %list_item_charpp*, %list_item_charpp** %it, align 8
-  %castAQ = bitcast %list_item_charpp* %it3 to i8*
-  %not_eq = icmp ne i8* %castAQ, null
-  br i1 %not_eq, label %cond_then_block, label %cond_end_block
-
-cond_then_block:                                  ; preds = %loop_top_block
-  br i1 false, label %cond_jump_then, label %cond_end
-
-cond_end_block:                                   ; preds = %loop_top_block
-  ret void
-
-cond_jump_then:                                   ; preds = %cond_then_block
-  %it4 = load %list_item_charpp*, %list_item_charpp** %it, align 8
-  %unwrap_cast25 = bitcast %list_item_charpp* %it4 to i8*
-  call void @unwrap_exception(i8* bitcast ([13 x i8]* @50 to i8*), i32 536, i8* %unwrap_cast25)
-  %unwrap_cast26 = bitcast %list_item_charpp* %it4 to i8*
-  call void @unwrap_exception(i8* bitcast ([13 x i8]* @51 to i8*), i32 536, i8* %unwrap_cast26)
-  %fieldLLL7 = getelementptr inbounds %list_item_charpp, %list_item_charpp* %it4, i32 0, i32 0
-  %item = load i8*, i8** %fieldLLL7, align 8
-  %nullcheckY = icmp eq i8* %item, null
-  br i1 %nullcheckY, label %cond_endY, label %cond_blockY
-
-cond_end:                                         ; preds = %cond_endY, %cond_then_block
-  %it8 = load %list_item_charpp*, %list_item_charpp** %it, align 8
-  store %list_item_charpp* %it8, %list_item_charpp** %prev_it, align 8
-  %it9 = load %list_item_charpp*, %list_item_charpp** %it, align 8
-  %unwrap_cast210 = bitcast %list_item_charpp* %it9 to i8*
-  call void @unwrap_exception(i8* bitcast ([13 x i8]* @52 to i8*), i32 539, i8* %unwrap_cast210)
-  %unwrap_cast211 = bitcast %list_item_charpp* %it9 to i8*
-  call void @unwrap_exception(i8* bitcast ([13 x i8]* @53 to i8*), i32 539, i8* %unwrap_cast211)
-  %fieldLLL12 = getelementptr inbounds %list_item_charpp, %list_item_charpp* %it9, i32 0, i32 2
-  %next = load %list_item_charpp*, %list_item_charpp** %fieldLLL12, align 8
-  store %list_item_charpp* %next, %list_item_charpp** %it, align 8
-  %prev_it13 = load %list_item_charpp*, %list_item_charpp** %prev_it, align 8
-  %unwrap_cast214 = bitcast %list_item_charpp* %prev_it13 to i8*
-  call void @unwrap_exception(i8* bitcast ([13 x i8]* @54 to i8*), i32 540, i8* %unwrap_cast214)
-  %castAK2 = bitcast %list_item_charpp* %prev_it13 to i8*
-  %nullcheckY17 = icmp eq i8* %castAK2, null
-  br i1 %nullcheckY17, label %cond_endY15, label %cond_blockY16
-
-cond_endY:                                        ; preds = %cond_blockY, %cond_jump_then
-  br label %cond_end
-
-cond_blockY:                                      ; preds = %cond_jump_then
-  call void @igc_decrement_ref_count(i8* %item)
-  br label %cond_endY
-
-cond_endY15:                                      ; preds = %cond_blockY16, %cond_end
-  br label %loop_top_block
-
-cond_blockY16:                                    ; preds = %cond_end
-  %castAK = bitcast %list_item_charpp* %prev_it13 to i8*
-  call void @call_finalizer(i8* bitcast (void (%list_item_charpp*)* @list_item_finalize to i8*), i8* %castAK, i32 0)
-  br label %cond_endY15
-}
-
-define internal void @list_item_finalize(%list_item_charpp* %0) {
-entry:
-  %self = alloca %list_item_charpp*, align 8
-  %self1 = alloca %list_item_charpp**, align 8
-  store %list_item_charpp* %0, %list_item_charpp** %self, align 8
-  store %list_item_charpp** %self, %list_item_charpp*** %self1, align 8
-  ret void
+  ret i32 0
 }
 
 attributes #0 = { nofree nosync nounwind willreturn }
