b.c.c:130:20: warning: duplicate 'short' declaration specifier [-Wduplicate-decl-specifier]
    unsigned short short _cur_column;
                   ^~~~~~
b.c.c:1002:5: warning: incompatible redeclaration of library function 'snprintf' [-Wincompatible-library-redeclaration]
int snprintf(char* __s, int __maxlen, const char* __format, ...);
    ^
b.c.c:1002:5: note: 'snprintf' is a builtin with type 'int (char *, unsigned long, const char *, ...)'
b.c.c:1003:5: warning: incompatible redeclaration of library function 'vsnprintf' [-Wincompatible-library-redeclaration]
int vsnprintf(char* __s, int __maxlen, const char* __format, va_list __arg);
    ^
b.c.c:1003:5: note: 'vsnprintf' is a builtin with type 'int (char *, unsigned long, const char *, __builtin_va_list)'
b.c.c:1043:5: warning: incompatible redeclaration of library function 'fread' [-Wincompatible-library-redeclaration]
int fread(void* __ptr, int __size, int __n, struct _IO_FILE* __stream);
    ^
b.c.c:1043:5: note: 'fread' is a builtin with type 'unsigned long (void *, unsigned long, unsigned long, FILE *)' (aka 'unsigned long (void *, unsigned long, unsigned long, struct _IO_FILE *)')
b.c.c:1044:5: warning: incompatible redeclaration of library function 'fwrite' [-Wincompatible-library-redeclaration]
int fwrite(const void* __ptr, int __size, int __n, struct _IO_FILE* __s);
    ^
b.c.c:1044:5: note: 'fwrite' is a builtin with type 'unsigned long (const void *, unsigned long, unsigned long, FILE *)' (aka 'unsigned long (const void *, unsigned long, unsigned long, struct _IO_FILE *)')
b.c.c:1079:7: warning: incompatible redeclaration of library function 'memcpy' [-Wincompatible-library-redeclaration]
void* memcpy(void* __dest, const void* __src, int __n);
      ^
b.c.c:1079:7: note: 'memcpy' is a builtin with type 'void *(void *, const void *, unsigned long)'
b.c.c:1080:7: warning: incompatible redeclaration of library function 'memmove' [-Wincompatible-library-redeclaration]
void* memmove(void* __dest, const void* __src, int __n);
      ^
b.c.c:1080:7: note: 'memmove' is a builtin with type 'void *(void *, const void *, unsigned long)'
b.c.c:1081:7: warning: incompatible redeclaration of library function 'memccpy' [-Wincompatible-library-redeclaration]
void* memccpy(void* __dest, const void* __src, int __c, int __n);
      ^
b.c.c:1081:7: note: 'memccpy' is a builtin with type 'void *(void *, const void *, int, unsigned long)'
b.c.c:1082:7: warning: incompatible redeclaration of library function 'memset' [-Wincompatible-library-redeclaration]
void* memset(void* __s, int __c, int __n);
      ^
b.c.c:1082:7: note: 'memset' is a builtin with type 'void *(void *, int, unsigned long)'
b.c.c:1083:5: warning: incompatible redeclaration of library function 'memcmp' [-Wincompatible-library-redeclaration]
int memcmp(const void* __s1, const void* __s2, int __n);
    ^
b.c.c:1083:5: note: 'memcmp' is a builtin with type 'int (const void *, const void *, unsigned long)'
b.c.c:1085:7: warning: incompatible redeclaration of library function 'memchr' [-Wincompatible-library-redeclaration]
void* memchr(const void* __s, int __c, int __n);
      ^
b.c.c:1085:7: note: 'memchr' is a builtin with type 'void *(const void *, int, unsigned long)'
b.c.c:1089:7: warning: incompatible redeclaration of library function 'strncpy' [-Wincompatible-library-redeclaration]
char* strncpy(char* __dest, const char* __src, int __n);
      ^
b.c.c:1089:7: note: 'strncpy' is a builtin with type 'char *(char *, const char *, unsigned long)'
b.c.c:1091:7: warning: incompatible redeclaration of library function 'strncat' [-Wincompatible-library-redeclaration]
char* strncat(char* __dest, const char* __src, int __n);
      ^
b.c.c:1091:7: note: 'strncat' is a builtin with type 'char *(char *, const char *, unsigned long)'
b.c.c:1093:5: warning: incompatible redeclaration of library function 'strncmp' [-Wincompatible-library-redeclaration]
int strncmp(const char* __s1, const char* __s2, int __n);
    ^
b.c.c:1093:5: note: 'strncmp' is a builtin with type 'int (const char *, const char *, unsigned long)'
b.c.c:1095:5: warning: incompatible redeclaration of library function 'strxfrm' [-Wincompatible-library-redeclaration]
int strxfrm(char* __dest, const char* __src, int __n);
    ^
b.c.c:1095:5: note: 'strxfrm' is a builtin with type 'unsigned long (char *, const char *, unsigned long)'
b.c.c:1099:7: warning: incompatible redeclaration of library function 'strndup' [-Wincompatible-library-redeclaration]
char* strndup(const char* __string, int __n);
      ^
b.c.c:1099:7: note: 'strndup' is a builtin with type 'char *(const char *, unsigned long)'
b.c.c:1103:5: warning: incompatible redeclaration of library function 'strcspn' [-Wincompatible-library-redeclaration]
int strcspn(const char* __s, const char* __reject);
    ^
b.c.c:1103:5: note: 'strcspn' is a builtin with type 'unsigned long (const char *, const char *)'
b.c.c:1104:5: warning: incompatible redeclaration of library function 'strspn' [-Wincompatible-library-redeclaration]
int strspn(const char* __s, const char* __accept);
    ^
b.c.c:1104:5: note: 'strspn' is a builtin with type 'unsigned long (const char *, const char *)'
b.c.c:1113:7: warning: incompatible redeclaration of library function 'mempcpy' [-Wincompatible-library-redeclaration]
void* mempcpy(void* __dest, const void* __src, int __n);
      ^
b.c.c:1113:7: note: 'mempcpy' is a builtin with type 'void *(void *, const void *, unsigned long)'
b.c.c:1114:5: warning: incompatible redeclaration of library function 'strlen' [-Wincompatible-library-redeclaration]
int strlen(const char* __s);
    ^
b.c.c:1114:5: note: 'strlen' is a builtin with type 'unsigned long (const char *)'
b.c.c:1121:5: warning: incompatible redeclaration of library function 'bcmp' [-Wincompatible-library-redeclaration]
int bcmp(const void* __s1, const void* __s2, int __n);
    ^
b.c.c:1121:5: note: 'bcmp' is a builtin with type 'int (const void *, const void *, unsigned long)'
b.c.c:1123:6: warning: incompatible redeclaration of library function 'bzero' [-Wincompatible-library-redeclaration]
void bzero(void* __s, int __n);
     ^
b.c.c:1123:6: note: 'bzero' is a builtin with type 'void (void *, unsigned long)'
b.c.c:1130:5: warning: incompatible redeclaration of library function 'strncasecmp' [-Wincompatible-library-redeclaration]
int strncasecmp(const char* __s1, const char* __s2, int __n);
    ^
b.c.c:1130:5: note: 'strncasecmp' is a builtin with type 'int (const char *, const char *, unsigned long)'
b.c.c:1141:7: warning: incompatible redeclaration of library function 'stpncpy' [-Wincompatible-library-redeclaration]
char* stpncpy(char* __dest, const char* __src, int __n);
      ^
b.c.c:1141:7: note: 'stpncpy' is a builtin with type 'char *(char *, const char *, unsigned long)'
b.c.c:1163:5: warning: incompatible redeclaration of library function 'strtoll' [-Wincompatible-library-redeclaration]
int strtoll(const char* __nptr, char** __endptr, int __base);
    ^
b.c.c:1163:5: note: 'strtoll' is a builtin with type 'long long (const char *, char **, int)'
b.c.c:1164:14: warning: incompatible redeclaration of library function 'strtoull' [-Wincompatible-library-redeclaration]
unsigned int strtoull(const char* __nptr, char** __endptr, int __base);
             ^
b.c.c:1164:14: note: 'strtoull' is a builtin with type 'unsigned long long (const char *, char **, int)'
b.c.c:1221:7: warning: incompatible redeclaration of library function 'malloc' [-Wincompatible-library-redeclaration]
void* malloc(int __size);
      ^
b.c.c:1221:7: note: 'malloc' is a builtin with type 'void *(unsigned long)'
b.c.c:1222:7: warning: incompatible redeclaration of library function 'calloc' [-Wincompatible-library-redeclaration]
void* calloc(int __nmemb, int __size);
      ^
b.c.c:1222:7: note: 'calloc' is a builtin with type 'void *(unsigned long, unsigned long)'
b.c.c:1223:7: warning: incompatible redeclaration of library function 'realloc' [-Wincompatible-library-redeclaration]
void* realloc(void* __ptr, int __size);
      ^
b.c.c:1223:7: note: 'realloc' is a builtin with type 'void *(void *, unsigned long)'
b.c.c:1226:7: warning: incompatible redeclaration of library function 'alloca' [-Wincompatible-library-redeclaration]
void* alloca(int __size);
      ^
b.c.c:1226:7: note: 'alloca' is a builtin with type 'void *(unsigned long)'
b.c.c:1229:7: warning: incompatible redeclaration of library function 'aligned_alloc' [-Wincompatible-library-redeclaration]
void* aligned_alloc(int __alignment, int __size);
      ^
b.c.c:1229:7: note: 'aligned_alloc' is a builtin with type 'void *(unsigned long, unsigned long)'
b.c.c:1261:5: warning: incompatible redeclaration of library function 'llabs' [-Wincompatible-library-redeclaration]
int llabs(int __x);
    ^
b.c.c:1261:5: note: 'llabs' is a builtin with type 'long long (long long)'
b.c.c:1316:57: warning: declaration of 'struct tuple2$$2int$bool$' will not be visible outside of this function [-Wvisibility]
static void tuple2$$2int$bool$phintbool_finalize(struct tuple2$$2int$bool$* self);
                                                        ^
b.c.c:1436:47: warning: integer literal is too large to be represented in a signed integer type, interpreting as unsigned [-Wimplicitly-unsigned-literal]
    unsigned long int __result__ = ((((__bsx)&18374686479671623680)>>56)|(((__bsx)&71776119061217280)>>40)|(((__bsx)&280375465082880)>>24)|(((__bsx)&1095216660480)>>8)|(((__bsx)&4278190080)<<8)|(((__bsx)&16711680)<<24)|(((__bsx)&65280)<<40)|(((__bsx)&255)<<56));
                                              ^
b.c.c:1496:40: warning: duplicate 'short' declaration specifier [-Wduplicate-decl-specifier]
static inline _Bool short_equals(short short self, short short right){
                                       ^~~~~~
b.c.c:1496:58: warning: duplicate 'short' declaration specifier [-Wduplicate-decl-specifier]
static inline _Bool short_equals(short short self, short short right){
                                                         ^~~~~~
b.c.c:1497:11: warning: duplicate 'short' declaration specifier [-Wduplicate-decl-specifier]
    short short __result__ = self==right;
          ^~~~~~
b.c.c:1603:43: warning: duplicate 'short' declaration specifier [-Wduplicate-decl-specifier]
static inline short int short_clone(short short self){
                                          ^~~~~~
b.c.c:1604:11: warning: duplicate 'short' declaration specifier [-Wduplicate-decl-specifier]
    short short __result__ = self;
          ^~~~~~
b.c.c:1627:20: warning: expression result unused [-Wunused-value]
    if(self->buf) {(char*)come_decrement_ref_count(self->buf,0,0); }
                   ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1648:25: warning: expression result unused [-Wunused-value]
    if(result_31->buf) {(char*)come_decrement_ref_count(result_31->buf,0,0); }
                        ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1677:24: warning: expression result unused [-Wunused-value]
        if(self->buf) {(char*)come_decrement_ref_count(self->buf,0,0); }
                       ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1695:24: warning: expression result unused [-Wunused-value]
        if(self->buf) {(char*)come_decrement_ref_count(self->buf,0,0); }
                       ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1722:67: warning: duplicate 'short' declaration specifier [-Wduplicate-decl-specifier]
static inline void buffer_append_short(struct buffer* self, short short value){
                                                                  ^~~~~~
b.c.c:1723:51: warning: duplicate 'short' declaration specifier [-Wduplicate-decl-specifier]
    buffer_append(self,(char*)&value,sizeof(short short));
                                                  ^~~~~
b.c.c:1737:24: warning: expression result unused [-Wunused-value]
        if(self->buf) {(char*)come_decrement_ref_count(self->buf,0,0); }
                       ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:2474:18: warning: incompatible pointer types assigning to 'struct list_item$$1char$ph *' from 'struct list_item$p$1char$ph *' [-Wincompatible-pointer-types]
            it_44=self->head;
                 ^~~~~~~~~~~
b.c.c:2480:22: warning: incompatible pointer types assigning to 'struct list_item$$1char$ph *' from 'struct list_item$p$1char$ph *' [-Wincompatible-pointer-types]
                it_44=it_44->next;
                     ^~~~~~~~~~~~
b.c.c:2490:14: warning: incompatible pointer types assigning to 'struct list_item$$1char$ph$$1char$ph *' from 'struct list_item$p$1char$ph *' [-Wincompatible-pointer-types]
        it_47=self->head;
             ^~~~~~~~~~~
b.c.c:2496:18: warning: incompatible pointer types assigning to 'struct list_item$$1char$ph$$1char$ph *' from 'struct list_item$p$1char$ph *' [-Wincompatible-pointer-types]
            it_47=it_47->next;
                 ^~~~~~~~~~~~
b.c.c:2517:27: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
                self->tail=litem_50;
                          ^~~~~~~~~
b.c.c:2518:27: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
                self->head=litem_50;
                          ^~~~~~~~~
b.c.c:2526:27: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
                self->tail=litem_51;
                          ^~~~~~~~~
b.c.c:2527:33: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
                self->head->next=litem_51;
                                ^~~~~~~~~
b.c.c:2535:33: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
                self->tail->next=litem_52;
                                ^~~~~~~~~
b.c.c:2536:27: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
                self->tail=litem_52;
                          ^~~~~~~~~
b.c.c:2515:37: warning: expression result unused [-Wunused-value]
                if(litem_50->item) {(char*)come_decrement_ref_count(litem_50->item,0,0); }
                                    ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:2524:37: warning: expression result unused [-Wunused-value]
                if(litem_51->item) {(char*)come_decrement_ref_count(litem_51->item,0,0); }
                                    ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:2533:37: warning: expression result unused [-Wunused-value]
                if(litem_52->item) {(char*)come_decrement_ref_count(litem_52->item,0,0); }
                                    ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:2622:273: error: invalid application of 'sizeof' to an incomplete type 'struct tuple2$$2int$bool$'
    struct tuple2$ph$2int$bool$* __result__ = (((struct tuple2$ph$2int$bool$*)(right_value66=tuple2$$2int$bool$phintbool_initialize((struct tuple2$$2int$bool$*)come_increment_ref_count(((struct tuple2$$2int$bool$*)(right_value65=(struct tuple2$$2int$bool$*)come_calloc(1, sizeof(struct tuple2$$2int$bool$)*(1))))),x+y,(_Bool)1))));
                                                                                                                                                                                                                                                                                ^     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:2622:141: note: forward declaration of 'struct tuple2$$2int$bool$'
    struct tuple2$ph$2int$bool$* __result__ = (((struct tuple2$ph$2int$bool$*)(right_value66=tuple2$$2int$bool$phintbool_initialize((struct tuple2$$2int$bool$*)come_increment_ref_count(((struct tuple2$$2int$bool$*)(right_value65=(struct tuple2$$2int$bool$*)come_calloc(1, sizeof(struct tuple2$$2int$bool$)*(1))))),x+y,(_Bool)1))));
                                                                                                                                            ^
b.c.c:2638:57: warning: declaration of 'struct tuple2$$2int$bool$' will not be visible outside of this function [-Wvisibility]
static void tuple2$$2int$bool$phintbool_finalize(struct tuple2$$2int$bool$* self){
                                                        ^
b.c.c:2638:13: error: conflicting types for 'tuple2$$2int$bool$phintbool_finalize'
static void tuple2$$2int$bool$phintbool_finalize(struct tuple2$$2int$bool$* self){
            ^
b.c.c:1316:13: note: previous declaration is here
static void tuple2$$2int$bool$phintbool_finalize(struct tuple2$$2int$bool$* self);
            ^
b.c.c:2994:37: warning: incompatible function pointer types passing 'void (struct __current_stack1__ *)' to parameter of type 'void (*)(void *)' [-Wincompatible-function-pointer-types]
    int_times(3,&__current_stack1__,method_block1);
                                    ^~~~~~~~~~~~~
b.c.c:1459:61: note: passing argument to parameter 'block' here
static inline void int_times(int self, void* parent, void (*block)(void*)){
                                                            ^
b.c.c:2995:140: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$ph$1char$ph *' [-Wincompatible-pointer-types]
    liX_116=(struct list$ph$1char$ph*)come_increment_ref_count(((struct list$ph$1char$ph*)(right_value80=list$$1char$phphcharph_initialize((struct list$$1char$ph*)come_increment_ref_count(((struct list$$1char$ph*)(right_value79=(struct list$$1char$ph*)come_calloc(1, sizeof(struct list$$1char$ph)*(1)))))))));
                                                                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:2460:92: note: passing argument to parameter 'self' here
static struct list$ph$1char$ph* list$$1char$phphcharph_initialize(struct list$ph$1char$ph* self){
                                                                                           ^
b.c.c:2995:12: warning: incompatible pointer types assigning to 'struct list$$1char$ph *' from 'struct list$ph$1char$ph *' [-Wincompatible-pointer-types]
    liX_116=(struct list$ph$1char$ph*)come_increment_ref_count(((struct list$ph$1char$ph*)(right_value80=list$$1char$phphcharph_initialize((struct list$$1char$ph*)come_increment_ref_count(((struct list$$1char$ph*)(right_value79=(struct list$$1char$ph*)come_calloc(1, sizeof(struct list$$1char$ph)*(1)))))))));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:2998:38: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    list$$1char$phphcharph_push_back(liX_116,(char*)come_increment_ref_count(((char*)(right_value81=__builtin_string("ABC")))));
                                     ^~~~~~~
b.c.c:2501:70: note: passing argument to parameter 'self' here
static void list$$1char$phphcharph_push_back(struct list$p$1char$ph* self, char* item){
                                                                     ^
b.c.c:3000:38: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    list$$1char$phphcharph_push_back(liX_116,(char*)come_increment_ref_count(((char*)(right_value82=__builtin_string("DEF")))));
                                     ^~~~~~~
b.c.c:2501:70: note: passing argument to parameter 'self' here
static void list$$1char$phphcharph_push_back(struct list$p$1char$ph* self, char* item){
                                                                     ^
b.c.c:3002:38: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    list$$1char$phphcharph_push_back(liX_116,(char*)come_increment_ref_count(((char*)(right_value83=__builtin_string("GHI")))));
                                     ^~~~~~~
b.c.c:2501:70: note: passing argument to parameter 'self' here
static void list$$1char$phphcharph_push_back(struct list$p$1char$ph* self, char* item){
                                                                     ^
b.c.c:3005:41: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    it_118=list$$1char$phphcharph_begin((liX_116));
                                        ^~~~~~~~~
b.c.c:1320:67: note: passing argument to parameter 'self' here
static char* list$$1char$phphcharph_begin(struct list$p$1char$ph* self);
                                                                  ^
b.c.c:3006:33: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    !list$$1char$phphcharph_end((liX_116));
                                ^~~~~~~~~
b.c.c:1321:65: note: passing argument to parameter 'self' here
static _Bool list$$1char$phphcharph_end(struct list$p$1char$ph* self);
                                                                ^
b.c.c:3007:40: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    it_118=list$$1char$phphcharph_next((liX_116))
                                       ^~~~~~~~~
b.c.c:1322:66: note: passing argument to parameter 'self' here
static char* list$$1char$phphcharph_next(struct list$p$1char$ph* self);
                                                                 ^
b.c.c:3011:129: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    liX2_122=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value85=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value84=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
                                                                                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1323:80: note: passing argument to parameter 'self' here
static struct list$ph$1int$* list$$1int$phint_initialize(struct list$ph$1int$* self);
                                                                               ^
b.c.c:3011:13: warning: incompatible pointer types assigning to 'struct list$$1int$ *' from 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    liX2_122=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value85=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value84=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3014:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(liX2_122,1);
                               ^~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3015:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(liX2_122,2);
                               ^~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3016:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(liX2_122,3);
                               ^~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3018:35: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    it_129=list$$1int$phint_begin((liX2_122));
                                  ^~~~~~~~~~
b.c.c:1327:56: note: passing argument to parameter 'self' here
static int list$$1int$phint_begin(struct list$p$1int$* self);
                                                       ^
b.c.c:3019:27: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    !list$$1int$phint_end((liX2_122));
                          ^~~~~~~~~~
b.c.c:1328:56: note: passing argument to parameter 'self' here
static _Bool list$$1int$phint_end(struct list$p$1int$* self);
                                                       ^
b.c.c:3020:34: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    it_129=list$$1int$phint_next((liX2_122))
                                 ^~~~~~~~~~
b.c.c:1329:55: note: passing argument to parameter 'self' here
static int list$$1int$phint_next(struct list$p$1int$* self);
                                                      ^
b.c.c:3046:27: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_each(liX2_122,&__current_stack2__,method_block2);
                          ^~~~~~~~
b.c.c:1330:56: note: passing argument to parameter 'self' here
static void list$$1int$phint_each(struct list$p$1int$* self, void* parent, void (*block)(void*,int,int,_Bool*));
                                                       ^
b.c.c:3046:56: warning: incompatible function pointer types passing 'void (struct __current_stack2__ *, int, int, _Bool *)' to parameter of type 'void (*)(void *, int, int, _Bool *)' [-Wincompatible-function-pointer-types]
    list$$1int$phint_each(liX2_122,&__current_stack2__,method_block2);
                                                       ^~~~~~~~~~~~~
b.c.c:1330:83: note: passing argument to parameter 'block' here
static void list$$1int$phint_each(struct list$p$1int$* self, void* parent, void (*block)(void*,int,int,_Bool*));
                                                                                  ^
b.c.c:3049:139: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$ph$1char$ph *' [-Wincompatible-pointer-types]
    li_136=(struct list$ph$1char$ph*)come_increment_ref_count(((struct list$ph$1char$ph*)(right_value90=list$$1char$phphcharph_initialize((struct list$$1char$ph*)come_increment_ref_count(((struct list$$1char$ph*)(right_value89=(struct list$$1char$ph*)come_calloc(1, sizeof(struct list$$1char$ph)*(1)))))))));
                                                                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:2460:92: note: passing argument to parameter 'self' here
static struct list$ph$1char$ph* list$$1char$phphcharph_initialize(struct list$ph$1char$ph* self){
                                                                                           ^
b.c.c:3049:11: warning: incompatible pointer types assigning to 'struct list$$1char$ph *' from 'struct list$ph$1char$ph *' [-Wincompatible-pointer-types]
    li_136=(struct list$ph$1char$ph*)come_increment_ref_count(((struct list$ph$1char$ph*)(right_value90=list$$1char$phphcharph_initialize((struct list$$1char$ph*)come_increment_ref_count(((struct list$$1char$ph*)(right_value89=(struct list$$1char$ph*)come_calloc(1, sizeof(struct list$$1char$ph)*(1)))))))));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3052:38: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    list$$1char$phphcharph_push_back(li_136,(char*)come_increment_ref_count(((char*)(right_value91=__builtin_string("ABC")))));
                                     ^~~~~~
b.c.c:2501:70: note: passing argument to parameter 'self' here
static void list$$1char$phphcharph_push_back(struct list$p$1char$ph* self, char* item){
                                                                     ^
b.c.c:3054:38: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    list$$1char$phphcharph_push_back(li_136,(char*)come_increment_ref_count(((char*)(right_value92=__builtin_string("DEF")))));
                                     ^~~~~~
b.c.c:2501:70: note: passing argument to parameter 'self' here
static void list$$1char$phphcharph_push_back(struct list$p$1char$ph* self, char* item){
                                                                     ^
b.c.c:3056:38: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    list$$1char$phphcharph_push_back(li_136,(char*)come_increment_ref_count(((char*)(right_value93=__builtin_string("GHI")))));
                                     ^~~~~~
b.c.c:2501:70: note: passing argument to parameter 'self' here
static void list$$1char$phphcharph_push_back(struct list$p$1char$ph* self, char* item){
                                                                     ^
b.c.c:3059:41: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    it_137=list$$1char$phphcharph_begin((li_136));
                                        ^~~~~~~~
b.c.c:1320:67: note: passing argument to parameter 'self' here
static char* list$$1char$phphcharph_begin(struct list$p$1char$ph* self);
                                                                  ^
b.c.c:3060:33: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    !list$$1char$phphcharph_end((li_136));
                                ^~~~~~~~
b.c.c:1321:65: note: passing argument to parameter 'self' here
static _Bool list$$1char$phphcharph_end(struct list$p$1char$ph* self);
                                                                ^
b.c.c:3061:40: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    it_137=list$$1char$phphcharph_next((li_136))
                                       ^~~~~~~~
b.c.c:1322:66: note: passing argument to parameter 'self' here
static char* list$$1char$phphcharph_next(struct list$p$1char$ph* self);
                                                                 ^
b.c.c:3065:128: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    li2_138=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value95=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value94=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
                                                                                                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1323:80: note: passing argument to parameter 'self' here
static struct list$ph$1int$* list$$1int$phint_initialize(struct list$ph$1int$* self);
                                                                               ^
b.c.c:3065:12: warning: incompatible pointer types assigning to 'struct list$$1int$ *' from 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    li2_138=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value95=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value94=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3068:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(li2_138,1);
                               ^~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3069:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(li2_138,2);
                               ^~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3070:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(li2_138,3);
                               ^~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3072:35: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    it_139=list$$1int$phint_begin((li2_138));
                                  ^~~~~~~~~
b.c.c:1327:56: note: passing argument to parameter 'self' here
static int list$$1int$phint_begin(struct list$p$1int$* self);
                                                       ^
b.c.c:3073:27: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    !list$$1int$phint_end((li2_138));
                          ^~~~~~~~~
b.c.c:1328:56: note: passing argument to parameter 'self' here
static _Bool list$$1int$phint_end(struct list$p$1int$* self);
                                                       ^
b.c.c:3074:34: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    it_139=list$$1int$phint_next((li2_138))
                                 ^~~~~~~~~
b.c.c:1329:55: note: passing argument to parameter 'self' here
static int list$$1int$phint_next(struct list$p$1int$* self);
                                                      ^
b.c.c:3104:27: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_each(li2_138,&__current_stack3__,method_block3);
                          ^~~~~~~
b.c.c:1330:56: note: passing argument to parameter 'self' here
static void list$$1int$phint_each(struct list$p$1int$* self, void* parent, void (*block)(void*,int,int,_Bool*));
                                                       ^
b.c.c:3104:55: warning: incompatible function pointer types passing 'void (struct __current_stack3__ *, int, int, _Bool *)' to parameter of type 'void (*)(void *, int, int, _Bool *)' [-Wincompatible-function-pointer-types]
    list$$1int$phint_each(li2_138,&__current_stack3__,method_block3);
                                                      ^~~~~~~~~~~~~
b.c.c:1330:83: note: passing argument to parameter 'block' here
static void list$$1int$phint_each(struct list$p$1int$* self, void* parent, void (*block)(void*,int,int,_Bool*));
                                                                                  ^
b.c.c:3106:48: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list::item",list$$1int$phint_item(li2_138,0,-1)==1);
                                               ^~~~~~~
b.c.c:1333:55: note: passing argument to parameter 'self' here
static int list$$1int$phint_item(struct list$p$1int$* self, int position, int default_value);
                                                      ^
b.c.c:3107:29: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_insert(li2_138,1,5);
                            ^~~~~~~
b.c.c:1334:58: note: passing argument to parameter 'self' here
static void list$$1int$phint_insert(struct list$p$1int$* self, int position, int item);
                                                         ^
b.c.c:3108:50: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list::insert",list$$1int$phint_item(li2_138,0,-1)==1&&list$$1int$phint_item(li2_138,1,-1)==5&&list$$1int$phint_item(li2_138,2,-1)==2&&list$$1int$phint_item(li2_138,3,-1)==3);
                                                 ^~~~~~~
b.c.c:1333:55: note: passing argument to parameter 'self' here
static int list$$1int$phint_item(struct list$p$1int$* self, int position, int default_value);
                                                      ^
b.c.c:3108:90: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list::insert",list$$1int$phint_item(li2_138,0,-1)==1&&list$$1int$phint_item(li2_138,1,-1)==5&&list$$1int$phint_item(li2_138,2,-1)==2&&list$$1int$phint_item(li2_138,3,-1)==3);
                                                                                         ^~~~~~~
b.c.c:1333:55: note: passing argument to parameter 'self' here
static int list$$1int$phint_item(struct list$p$1int$* self, int position, int default_value);
                                                      ^
b.c.c:3108:130: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list::insert",list$$1int$phint_item(li2_138,0,-1)==1&&list$$1int$phint_item(li2_138,1,-1)==5&&list$$1int$phint_item(li2_138,2,-1)==2&&list$$1int$phint_item(li2_138,3,-1)==3);
                                                                                                                                 ^~~~~~~
b.c.c:1333:55: note: passing argument to parameter 'self' here
static int list$$1int$phint_item(struct list$p$1int$* self, int position, int default_value);
                                                      ^
b.c.c:3108:170: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list::insert",list$$1int$phint_item(li2_138,0,-1)==1&&list$$1int$phint_item(li2_138,1,-1)==5&&list$$1int$phint_item(li2_138,2,-1)==2&&list$$1int$phint_item(li2_138,3,-1)==3);
                                                                                                                                                                         ^~~~~~~
b.c.c:1333:55: note: passing argument to parameter 'self' here
static int list$$1int$phint_item(struct list$p$1int$* self, int position, int default_value);
                                                      ^
b.c.c:3109:35: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    list$$1char$phphcharph_insert(li_136,1,(char*)come_increment_ref_count(((char*)(right_value108=__builtin_string("GGG")))));
                                  ^~~~~~
b.c.c:1336:67: note: passing argument to parameter 'self' here
static void list$$1char$phphcharph_insert(struct list$p$1char$ph* self, int position, char* item);
                                                                  ^
b.c.c:3111:63: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    xassert("list::insert",strcmp(list$$1char$phphcharph_item(li_136,0,-1),"ABC")==0&&strcmp(list$$1char$phphcharph_item(li_136,1,-1),"GGG")==0&&strcmp(list$$1char$phphcharph_item(li_136,2,-1),"DEF")==0&&strcmp(list$$1char$phphcharph_item(li_136,3,-1),"GHI")==0);
                                                              ^~~~~~
b.c.c:1338:66: note: passing argument to parameter 'self' here
static char* list$$1char$phphcharph_item(struct list$p$1char$ph* self, int position, char* default_value);
                                                                 ^
b.c.c:3111:72: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'char *' [-Wint-conversion]
    xassert("list::insert",strcmp(list$$1char$phphcharph_item(li_136,0,-1),"ABC")==0&&strcmp(list$$1char$phphcharph_item(li_136,1,-1),"GGG")==0&&strcmp(list$$1char$phphcharph_item(li_136,2,-1),"DEF")==0&&strcmp(list$$1char$phphcharph_item(li_136,3,-1),"GHI")==0);
                                                                       ^~
b.c.c:1338:92: note: passing argument to parameter 'default_value' here
static char* list$$1char$phphcharph_item(struct list$p$1char$ph* self, int position, char* default_value);
                                                                                           ^
b.c.c:3111:122: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    xassert("list::insert",strcmp(list$$1char$phphcharph_item(li_136,0,-1),"ABC")==0&&strcmp(list$$1char$phphcharph_item(li_136,1,-1),"GGG")==0&&strcmp(list$$1char$phphcharph_item(li_136,2,-1),"DEF")==0&&strcmp(list$$1char$phphcharph_item(li_136,3,-1),"GHI")==0);
                                                                                                                         ^~~~~~
b.c.c:1338:66: note: passing argument to parameter 'self' here
static char* list$$1char$phphcharph_item(struct list$p$1char$ph* self, int position, char* default_value);
                                                                 ^
b.c.c:3111:131: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'char *' [-Wint-conversion]
    xassert("list::insert",strcmp(list$$1char$phphcharph_item(li_136,0,-1),"ABC")==0&&strcmp(list$$1char$phphcharph_item(li_136,1,-1),"GGG")==0&&strcmp(list$$1char$phphcharph_item(li_136,2,-1),"DEF")==0&&strcmp(list$$1char$phphcharph_item(li_136,3,-1),"GHI")==0);
                                                                                                                                  ^~
b.c.c:1338:92: note: passing argument to parameter 'default_value' here
static char* list$$1char$phphcharph_item(struct list$p$1char$ph* self, int position, char* default_value);
                                                                                           ^
b.c.c:3111:181: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    xassert("list::insert",strcmp(list$$1char$phphcharph_item(li_136,0,-1),"ABC")==0&&strcmp(list$$1char$phphcharph_item(li_136,1,-1),"GGG")==0&&strcmp(list$$1char$phphcharph_item(li_136,2,-1),"DEF")==0&&strcmp(list$$1char$phphcharph_item(li_136,3,-1),"GHI")==0);
                                                                                                                                                                                    ^~~~~~
b.c.c:1338:66: note: passing argument to parameter 'self' here
static char* list$$1char$phphcharph_item(struct list$p$1char$ph* self, int position, char* default_value);
                                                                 ^
b.c.c:3111:190: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'char *' [-Wint-conversion]
    xassert("list::insert",strcmp(list$$1char$phphcharph_item(li_136,0,-1),"ABC")==0&&strcmp(list$$1char$phphcharph_item(li_136,1,-1),"GGG")==0&&strcmp(list$$1char$phphcharph_item(li_136,2,-1),"DEF")==0&&strcmp(list$$1char$phphcharph_item(li_136,3,-1),"GHI")==0);
                                                                                                                                                                                             ^~
b.c.c:1338:92: note: passing argument to parameter 'default_value' here
static char* list$$1char$phphcharph_item(struct list$p$1char$ph* self, int position, char* default_value);
                                                                                           ^
b.c.c:3111:240: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    xassert("list::insert",strcmp(list$$1char$phphcharph_item(li_136,0,-1),"ABC")==0&&strcmp(list$$1char$phphcharph_item(li_136,1,-1),"GGG")==0&&strcmp(list$$1char$phphcharph_item(li_136,2,-1),"DEF")==0&&strcmp(list$$1char$phphcharph_item(li_136,3,-1),"GHI")==0);
                                                                                                                                                                                                                                               ^~~~~~
b.c.c:1338:66: note: passing argument to parameter 'self' here
static char* list$$1char$phphcharph_item(struct list$p$1char$ph* self, int position, char* default_value);
                                                                 ^
b.c.c:3111:249: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'char *' [-Wint-conversion]
    xassert("list::insert",strcmp(list$$1char$phphcharph_item(li_136,0,-1),"ABC")==0&&strcmp(list$$1char$phphcharph_item(li_136,1,-1),"GGG")==0&&strcmp(list$$1char$phphcharph_item(li_136,2,-1),"DEF")==0&&strcmp(list$$1char$phphcharph_item(li_136,3,-1),"GHI")==0);
                                                                                                                                                                                                                                                        ^~
b.c.c:1338:92: note: passing argument to parameter 'default_value' here
static char* list$$1char$phphcharph_item(struct list$p$1char$ph* self, int position, char* default_value);
                                                                                           ^
b.c.c:3112:34: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    list$$1char$phphcharph_reset(li_136);
                                 ^~~~~~
b.c.c:1339:66: note: passing argument to parameter 'self' here
static void list$$1char$phphcharph_reset(struct list$p$1char$ph* self);
                                                                 ^
b.c.c:3113:57: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    xassert("list::reset",list$$1char$phphcharph_length(li_136)==0);
                                                        ^~~~~~
b.c.c:1341:66: note: passing argument to parameter 'self' here
static int list$$1char$phphcharph_length(struct list$p$1char$ph* self);
                                                                 ^
b.c.c:3114:29: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_delete(li2_138,0,1);
                            ^~~~~~~
b.c.c:1342:58: note: passing argument to parameter 'self' here
static void list$$1int$phint_delete(struct list$p$1int$* self, int head, int tail);
                                                         ^
b.c.c:3115:50: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list::delete",list$$1int$phint_item(li2_138,0,-1)==5&&list$$1int$phint_item(li2_138,1,-1)==2&&list$$1int$phint_item(li2_138,2,-1)==3);
                                                 ^~~~~~~
b.c.c:1333:55: note: passing argument to parameter 'self' here
static int list$$1int$phint_item(struct list$p$1int$* self, int position, int default_value);
                                                      ^
b.c.c:3115:90: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list::delete",list$$1int$phint_item(li2_138,0,-1)==5&&list$$1int$phint_item(li2_138,1,-1)==2&&list$$1int$phint_item(li2_138,2,-1)==3);
                                                                                         ^~~~~~~
b.c.c:1333:55: note: passing argument to parameter 'self' here
static int list$$1int$phint_item(struct list$p$1int$* self, int position, int default_value);
                                                      ^
b.c.c:3115:130: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list::delete",list$$1int$phint_item(li2_138,0,-1)==5&&list$$1int$phint_item(li2_138,1,-1)==2&&list$$1int$phint_item(li2_138,2,-1)==3);
                                                                                                                                 ^~~~~~~
b.c.c:1333:55: note: passing argument to parameter 'self' here
static int list$$1int$phint_item(struct list$p$1int$* self, int position, int default_value);
                                                      ^
b.c.c:3116:141: warning: incompatible pointer types passing 'struct list$$1char$ph *' to parameter of type 'struct list$ph$1char$ph *' [-Wincompatible-pointer-types]
    li3_177=(struct list$ph$1char$ph*)come_increment_ref_count(((struct list$ph$1char$ph*)(right_value110=list$$1char$phphcharph_initialize((struct list$$1char$ph*)come_increment_ref_count(((struct list$$1char$ph*)(right_value109=(struct list$$1char$ph*)come_calloc(1, sizeof(struct list$$1char$ph)*(1)))))))));
                                                                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:2460:92: note: passing argument to parameter 'self' here
static struct list$ph$1char$ph* list$$1char$phphcharph_initialize(struct list$ph$1char$ph* self){
                                                                                           ^
b.c.c:3119:40: warning: incompatible pointer types passing 'struct list$ph$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    list$ph$1char$phphcharph_push_back(li3_177,(char*)come_increment_ref_count(((char*)(right_value114=__builtin_string("AAA")))));
                                       ^~~~~~~
b.c.c:1345:72: note: passing argument to parameter 'self' here
static void list$ph$1char$phphcharph_push_back(struct list$p$1char$ph* self, char* item);
                                                                       ^
b.c.c:3121:40: warning: incompatible pointer types passing 'struct list$ph$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    list$ph$1char$phphcharph_push_back(li3_177,(char*)come_increment_ref_count(((char*)(right_value115=__builtin_string("BBB")))));
                                       ^~~~~~~
b.c.c:1345:72: note: passing argument to parameter 'self' here
static void list$ph$1char$phphcharph_push_back(struct list$p$1char$ph* self, char* item);
                                                                       ^
b.c.c:3123:40: warning: incompatible pointer types passing 'struct list$ph$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    list$ph$1char$phphcharph_push_back(li3_177,(char*)come_increment_ref_count(((char*)(right_value116=__builtin_string("CCC")))));
                                       ^~~~~~~
b.c.c:1345:72: note: passing argument to parameter 'self' here
static void list$ph$1char$phphcharph_push_back(struct list$p$1char$ph* self, char* item);
                                                                       ^
b.c.c:3125:38: warning: incompatible pointer types passing 'struct list$ph$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    list$ph$1char$phphcharph_replace(li3_177,0,(char*)come_increment_ref_count(((char*)(right_value117=__builtin_string("ABC")))));
                                     ^~~~~~~
b.c.c:1346:70: note: passing argument to parameter 'self' here
static void list$ph$1char$phphcharph_replace(struct list$p$1char$ph* self, int position, char* item);
                                                                     ^
b.c.c:3127:66: warning: incompatible pointer types passing 'struct list$ph$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    xassert("list::replace",strcmp(list$ph$1char$phphcharph_item(li3_177,0,((void*)0)),"ABC")==0&&strcmp(list$ph$1char$phphcharph_item(li3_177,1,((void*)0)),"BBB")==0&&strcmp(list$ph$1char$phphcharph_item(li3_177,2,((void*)0)),"CCC")==0);
                                                                 ^~~~~~~
b.c.c:1347:68: note: passing argument to parameter 'self' here
static char* list$ph$1char$phphcharph_item(struct list$p$1char$ph* self, int position, char* default_value);
                                                                   ^
b.c.c:3127:136: warning: incompatible pointer types passing 'struct list$ph$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    xassert("list::replace",strcmp(list$ph$1char$phphcharph_item(li3_177,0,((void*)0)),"ABC")==0&&strcmp(list$ph$1char$phphcharph_item(li3_177,1,((void*)0)),"BBB")==0&&strcmp(list$ph$1char$phphcharph_item(li3_177,2,((void*)0)),"CCC")==0);
                                                                                                                                       ^~~~~~~
b.c.c:1347:68: note: passing argument to parameter 'self' here
static char* list$ph$1char$phphcharph_item(struct list$p$1char$ph* self, int position, char* default_value);
                                                                   ^
b.c.c:3127:206: warning: incompatible pointer types passing 'struct list$ph$1char$ph *' to parameter of type 'struct list$p$1char$ph *' [-Wincompatible-pointer-types]
    xassert("list::replace",strcmp(list$ph$1char$phphcharph_item(li3_177,0,((void*)0)),"ABC")==0&&strcmp(list$ph$1char$phphcharph_item(li3_177,1,((void*)0)),"BBB")==0&&strcmp(list$ph$1char$phphcharph_item(li3_177,2,((void*)0)),"CCC")==0);
                                                                                                                                                                                                             ^~~~~~~
b.c.c:1347:68: note: passing argument to parameter 'self' here
static char* list$ph$1char$phphcharph_item(struct list$p$1char$ph* self, int position, char* default_value);
                                                                   ^
b.c.c:3128:129: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    li4_185=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value119=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value118=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
                                                                                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1323:80: note: passing argument to parameter 'self' here
static struct list$ph$1int$* list$$1int$phint_initialize(struct list$ph$1int$* self);
                                                                               ^
b.c.c:3131:34: warning: incompatible pointer types passing 'struct list$ph$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$ph$1int$phint_push_back(li4_185,1);
                                 ^~~~~~~
b.c.c:1348:63: note: passing argument to parameter 'self' here
static void list$ph$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                              ^
b.c.c:3132:34: warning: incompatible pointer types passing 'struct list$ph$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$ph$1int$phint_push_back(li4_185,3);
                                 ^~~~~~~
b.c.c:1348:63: note: passing argument to parameter 'self' here
static void list$ph$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                              ^
b.c.c:3133:34: warning: incompatible pointer types passing 'struct list$ph$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$ph$1int$phint_push_back(li4_185,5);
                                 ^~~~~~~
b.c.c:1348:63: note: passing argument to parameter 'self' here
static void list$ph$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                              ^
b.c.c:3134:129: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    li5_189=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value124=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value123=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
                                                                                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1323:80: note: passing argument to parameter 'self' here
static struct list$ph$1int$* list$$1int$phint_initialize(struct list$ph$1int$* self);
                                                                               ^
b.c.c:3137:34: warning: incompatible pointer types passing 'struct list$ph$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$ph$1int$phint_push_back(li5_189,1);
                                 ^~~~~~~
b.c.c:1348:63: note: passing argument to parameter 'self' here
static void list$ph$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                              ^
b.c.c:3138:34: warning: incompatible pointer types passing 'struct list$ph$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$ph$1int$phint_push_back(li5_189,3);
                                 ^~~~~~~
b.c.c:1348:63: note: passing argument to parameter 'self' here
static void list$ph$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                              ^
b.c.c:3139:34: warning: incompatible pointer types passing 'struct list$ph$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$ph$1int$phint_push_back(li5_189,5);
                                 ^~~~~~~
b.c.c:1348:63: note: passing argument to parameter 'self' here
static void list$ph$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                              ^
b.c.c:3140:54: warning: incompatible pointer types passing 'struct list$ph$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list::equals",list$ph$1int$phint_equals(li4_185,li5_189));
                                                     ^~~~~~~
b.c.c:1349:61: note: passing argument to parameter 'left' here
static _Bool list$ph$1int$phint_equals(struct list$p$1int$* left, struct list$p$1int$* right);
                                                            ^
b.c.c:3140:62: warning: incompatible pointer types passing 'struct list$ph$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list::equals",list$ph$1int$phint_equals(li4_185,li5_189));
                                                             ^~~~~~~
b.c.c:1349:88: note: passing argument to parameter 'right' here
static _Bool list$ph$1int$phint_equals(struct list$p$1int$* left, struct list$p$1int$* right);
                                                                                       ^
b.c.c:3141:50: warning: incompatible pointer types passing 'struct list$ph$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list::find",list$ph$1int$phint_find(li4_185,5,-1)==2);
                                                 ^~~~~~~
b.c.c:1350:57: note: passing argument to parameter 'self' here
static int list$ph$1int$phint_find(struct list$p$1int$* self, int item, int default_value);
                                                        ^
b.c.c:3142:129: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    li6_194=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value126=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value125=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
                                                                                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1323:80: note: passing argument to parameter 'self' here
static struct list$ph$1int$* list$$1int$phint_initialize(struct list$ph$1int$* self);
                                                                               ^
b.c.c:3145:34: warning: incompatible pointer types passing 'struct list$ph$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$ph$1int$phint_push_back(li6_194,3);
                                 ^~~~~~~
b.c.c:1348:63: note: passing argument to parameter 'self' here
static void list$ph$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                              ^
b.c.c:3146:34: warning: incompatible pointer types passing 'struct list$ph$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$ph$1int$phint_push_back(li6_194,5);
                                 ^~~~~~~
b.c.c:1348:63: note: passing argument to parameter 'self' here
static void list$ph$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                              ^
b.c.c:3147:122: warning: incompatible pointer types passing 'struct list$ph$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list::sublist",list$ph$1int$phint_equals(((struct list$ph$1int$*)(right_value132=list$ph$1int$phint_sublist(li5_189,1,-1))),li6_194));
                                                                                                                         ^~~~~~~
b.c.c:1351:78: note: passing argument to parameter 'self' here
static struct list$ph$1int$* list$ph$1int$phint_sublist(struct list$p$1int$* self, int begin, int tail);
                                                                             ^
b.c.c:3147:55: warning: incompatible pointer types passing 'struct list$ph$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list::sublist",list$ph$1int$phint_equals(((struct list$ph$1int$*)(right_value132=list$ph$1int$phint_sublist(li5_189,1,-1))),li6_194));
                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1349:61: note: passing argument to parameter 'left' here
static _Bool list$ph$1int$phint_equals(struct list$p$1int$* left, struct list$p$1int$* right);
                                                            ^
b.c.c:3147:138: warning: incompatible pointer types passing 'struct list$ph$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list::sublist",list$ph$1int$phint_equals(((struct list$ph$1int$*)(right_value132=list$ph$1int$phint_sublist(li5_189,1,-1))),li6_194));
                                                                                                                                         ^~~~~~~
b.c.c:1349:88: note: passing argument to parameter 'right' here
static _Bool list$ph$1int$phint_equals(struct list$p$1int$* left, struct list$p$1int$* right);
                                                                                       ^
b.c.c:3162:129: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    liZ_207=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value139=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value138=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
                                                                                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1323:80: note: passing argument to parameter 'self' here
static struct list$ph$1int$* list$$1int$phint_initialize(struct list$ph$1int$* self);
                                                                               ^
b.c.c:3162:12: warning: incompatible pointer types assigning to 'struct list$$1int$ *' from 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    liZ_207=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value139=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value138=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3165:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(liZ_207,1);
                               ^~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3166:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(liZ_207,2);
                               ^~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3167:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(liZ_207,3);
                               ^~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3200:27: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_each(liZ_207,&__current_stack4__,method_block4);
                          ^~~~~~~
b.c.c:1330:56: note: passing argument to parameter 'self' here
static void list$$1int$phint_each(struct list$p$1int$* self, void* parent, void (*block)(void*,int,int,_Bool*));
                                                       ^
b.c.c:3200:55: warning: incompatible function pointer types passing 'void (struct __current_stack4__ *, int, int, _Bool *)' to parameter of type 'void (*)(void *, int, int, _Bool *)' [-Wincompatible-function-pointer-types]
    list$$1int$phint_each(liZ_207,&__current_stack4__,method_block4);
                                                      ^~~~~~~~~~~~~
b.c.c:1330:83: note: passing argument to parameter 'block' here
static void list$$1int$phint_each(struct list$p$1int$* self, void* parent, void (*block)(void*,int,int,_Bool*));
                                                                                  ^
b.c.c:3201:45: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_operator_store_element(liZ_207,0,777);
                                            ^~~~~~~
b.c.c:1357:74: note: passing argument to parameter 'self' here
static void list$$1int$phint_operator_store_element(struct list$p$1int$* self, int position, int item);
                                                                         ^
b.c.c:3202:65: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    printf("liZ[0] %d\n",list$$1int$phint_operator_load_element(liZ_207,0));
                                                                ^~~~~~~
b.c.c:1359:72: note: passing argument to parameter 'self' here
static int list$$1int$phint_operator_load_element(struct list$p$1int$* self, int index);
                                                                       ^
b.c.c:3203:130: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    liZ2_213=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value141=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value140=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
                                                                                                                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1323:80: note: passing argument to parameter 'self' here
static struct list$ph$1int$* list$$1int$phint_initialize(struct list$ph$1int$* self);
                                                                               ^
b.c.c:3203:13: warning: incompatible pointer types assigning to 'struct list$$1int$ *' from 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    liZ2_213=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value141=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value140=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3206:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(liZ2_213,777);
                               ^~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3207:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(liZ2_213,2);
                               ^~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3208:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(liZ2_213,3);
                               ^~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3209:60: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list equals",list$$1int$phint_operator_equals(liZ_207,liZ2_213));
                                                           ^~~~~~~
b.c.c:1361:68: note: passing argument to parameter 'self' here
static _Bool list$$1int$phint_operator_equals(struct list$p$1int$* self, struct list$p$1int$* right);
                                                                   ^
b.c.c:3209:68: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list equals",list$$1int$phint_operator_equals(liZ_207,liZ2_213));
                                                                   ^~~~~~~~
b.c.c:1361:95: note: passing argument to parameter 'right' here
static _Bool list$$1int$phint_operator_equals(struct list$p$1int$* self, struct list$p$1int$* right);
                                                                                              ^
b.c.c:3210:141: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    __list_value1___216=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value143=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value142=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
                                                                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1323:80: note: passing argument to parameter 'self' here
static struct list$ph$1int$* list$$1int$phint_initialize(struct list$ph$1int$* self);
                                                                               ^
b.c.c:3210:24: warning: incompatible pointer types assigning to 'struct list$$1int$ *' from 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    __list_value1___216=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value143=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value142=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3213:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(__list_value1___216,1);
                               ^~~~~~~~~~~~~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3214:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(__list_value1___216,2);
                               ^~~~~~~~~~~~~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3215:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(__list_value1___216,3);
                               ^~~~~~~~~~~~~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3216:141: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    __list_value2___217=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value145=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value144=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
                                                                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1323:80: note: passing argument to parameter 'self' here
static struct list$ph$1int$* list$$1int$phint_initialize(struct list$ph$1int$* self);
                                                                               ^
b.c.c:3216:24: warning: incompatible pointer types assigning to 'struct list$$1int$ *' from 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    __list_value2___217=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value145=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value144=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3219:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(__list_value2___217,1);
                               ^~~~~~~~~~~~~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3220:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(__list_value2___217,2);
                               ^~~~~~~~~~~~~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3221:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(__list_value2___217,3);
                               ^~~~~~~~~~~~~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3222:65: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list equals test",list$$1int$phint_operator_equals(__list_value1___216,__list_value2___217));
                                                                ^~~~~~~~~~~~~~~~~~~
b.c.c:1361:68: note: passing argument to parameter 'self' here
static _Bool list$$1int$phint_operator_equals(struct list$p$1int$* self, struct list$p$1int$* right);
                                                                   ^
b.c.c:3222:85: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    xassert("list equals test",list$$1int$phint_operator_equals(__list_value1___216,__list_value2___217));
                                                                                    ^~~~~~~~~~~~~~~~~~~
b.c.c:1361:95: note: passing argument to parameter 'right' here
static _Bool list$$1int$phint_operator_equals(struct list$p$1int$* self, struct list$p$1int$* right);
                                                                                              ^
b.c.c:3223:141: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    __list_value3___218=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value147=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value146=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
                                                                                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1323:80: note: passing argument to parameter 'self' here
static struct list$ph$1int$* list$$1int$phint_initialize(struct list$ph$1int$* self);
                                                                               ^
b.c.c:3223:24: warning: incompatible pointer types assigning to 'struct list$$1int$ *' from 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
    __list_value3___218=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value147=list$$1int$phint_initialize((struct list$$1int$*)come_increment_ref_count(((struct list$$1int$*)(right_value146=(struct list$$1int$*)come_calloc(1, sizeof(struct list$$1int$)*(1)))))))));
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3226:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(__list_value3___218,1);
                               ^~~~~~~~~~~~~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3227:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(__list_value3___218,2);
                               ^~~~~~~~~~~~~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3228:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(__list_value3___218,3);
                               ^~~~~~~~~~~~~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3229:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(__list_value3___218,4);
                               ^~~~~~~~~~~~~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3230:32: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_push_back(__list_value3___218,5);
                               ^~~~~~~~~~~~~~~~~~~
b.c.c:1326:61: note: passing argument to parameter 'self' here
static void list$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                            ^
b.c.c:3267:27: warning: incompatible pointer types passing 'struct list$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
    list$$1int$phint_each(__list_value3___218,&__current_stack5__,method_block5);
                          ^~~~~~~~~~~~~~~~~~~
b.c.c:1330:56: note: passing argument to parameter 'self' here
static void list$$1int$phint_each(struct list$p$1int$* self, void* parent, void (*block)(void*,int,int,_Bool*));
                                                       ^
b.c.c:3267:67: warning: incompatible function pointer types passing 'void (struct __current_stack5__ *, int, int, _Bool *)' to parameter of type 'void (*)(void *, int, int, _Bool *)' [-Wincompatible-function-pointer-types]
    list$$1int$phint_each(__list_value3___218,&__current_stack5__,method_block5);
                                                                  ^~~~~~~~~~~~~
b.c.c:1330:83: note: passing argument to parameter 'block' here
static void list$$1int$phint_each(struct list$p$1int$* self, void* parent, void (*block)(void*,int,int,_Bool*));
                                                                                  ^
b.c.c:3268:148: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$ph$2char$pint$ *' [-Wincompatible-pointer-types]
    m0_230=(struct map$ph$2char$pint$*)come_increment_ref_count(((struct map$ph$2char$pint$*)(right_value154=map$$2char$pint$phcharpint_initialize((struct map$$2char$pint$*)come_increment_ref_count(((struct map$$2char$pint$*)(right_value148=(struct map$$2char$pint$*)come_calloc(1, sizeof(struct map$$2char$pint$)*(1)))))))));
                                                                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1364:100: note: passing argument to parameter 'self' here
static struct map$ph$2char$pint$* map$$2char$pint$phcharpint_initialize(struct map$ph$2char$pint$* self);
                                                                                                   ^
b.c.c:3268:11: warning: incompatible pointer types assigning to 'struct map$$2char$pint$ *' from 'struct map$ph$2char$pint$ *' [-Wincompatible-pointer-types]
    m0_230=(struct map$ph$2char$pint$*)come_increment_ref_count(((struct map$ph$2char$pint$*)(right_value154=map$$2char$pint$phcharpint_initialize((struct map$$2char$pint$*)come_increment_ref_count(((struct map$$2char$pint$*)(right_value148=(struct map$$2char$pint$*)come_calloc(1, sizeof(struct map$$2char$pint$)*(1)))))))));
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3271:39: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    map$$2char$pint$phcharpint_insert(m0_230,"AAA",128);
                                      ^~~~~~
b.c.c:1372:73: note: passing argument to parameter 'self' here
static void map$$2char$pint$phcharpint_insert(struct map$p$2char$pint$* self, char* key, int item);
                                                                        ^
b.c.c:3272:54: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    xassert("map test",map$$2char$pint$phcharpint_at(m0_230,"AAA",-1)==128);
                                                     ^~~~~~
b.c.c:1382:68: note: passing argument to parameter 'self' here
static int map$$2char$pint$phcharpint_at(struct map$p$2char$pint$* self, char* key, int default_value);
                                                                   ^
b.c.c:3273:160: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$ph$2char$pint$ *' [-Wincompatible-pointer-types]
    __map_value1___259=(struct map$ph$2char$pint$*)come_increment_ref_count(((struct map$ph$2char$pint$*)(right_value162=map$$2char$pint$phcharpint_initialize((struct map$$2char$pint$*)come_increment_ref_count(((struct map$$2char$pint$*)(right_value161=(struct map$$2char$pint$*)come_calloc(1, sizeof(struct map$$2char$pint$)*(1)))))))));
                                                                                                                                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1364:100: note: passing argument to parameter 'self' here
static struct map$ph$2char$pint$* map$$2char$pint$phcharpint_initialize(struct map$ph$2char$pint$* self);
                                                                                                   ^
b.c.c:3273:23: warning: incompatible pointer types assigning to 'struct map$$2char$pint$ *' from 'struct map$ph$2char$pint$ *' [-Wincompatible-pointer-types]
    __map_value1___259=(struct map$ph$2char$pint$*)come_increment_ref_count(((struct map$ph$2char$pint$*)(right_value162=map$$2char$pint$phcharpint_initialize((struct map$$2char$pint$*)come_increment_ref_count(((struct map$$2char$pint$*)(right_value161=(struct map$$2char$pint$*)come_calloc(1, sizeof(struct map$$2char$pint$)*(1)))))))));
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3276:39: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    map$$2char$pint$phcharpint_insert(__map_value1___259,"AAA",1);
                                      ^~~~~~~~~~~~~~~~~~
b.c.c:1372:73: note: passing argument to parameter 'self' here
static void map$$2char$pint$phcharpint_insert(struct map$p$2char$pint$* self, char* key, int item);
                                                                        ^
b.c.c:3277:39: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    map$$2char$pint$phcharpint_insert(__map_value1___259,"BBB",2);
                                      ^~~~~~~~~~~~~~~~~~
b.c.c:1372:73: note: passing argument to parameter 'self' here
static void map$$2char$pint$phcharpint_insert(struct map$p$2char$pint$* self, char* key, int item);
                                                                        ^
b.c.c:3279:71: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    printf("%d %d\n",map$$2char$pint$phcharpint_operator_load_element(m1_260,"AAA"),map$$2char$pint$phcharpint_operator_load_element(m1_260,"BBB"));
                                                                      ^~~~~~
b.c.c:1383:87: note: passing argument to parameter 'self' here
static int map$$2char$pint$phcharpint_operator_load_element(struct map$p$2char$pint$* self, char* key);
                                                                                      ^
b.c.c:3279:134: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    printf("%d %d\n",map$$2char$pint$phcharpint_operator_load_element(m1_260,"AAA"),map$$2char$pint$phcharpint_operator_load_element(m1_260,"BBB"));
                                                                                                                                     ^~~~~~
b.c.c:1383:87: note: passing argument to parameter 'self' here
static int map$$2char$pint$phcharpint_operator_load_element(struct map$p$2char$pint$* self, char* key);
                                                                                      ^
b.c.c:3280:96: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    m2_277=(struct map$$2char$pint$*)come_increment_ref_count(map$$2char$pint$phcharpint_clone(m1_260));
                                                                                               ^~~~~~
b.c.c:1384:94: note: passing argument to parameter 'self' here
static struct map$ph$2char$pint$* map$$2char$pint$phcharpint_clone(struct map$p$2char$pint$* self);
                                                                                             ^
b.c.c:3281:71: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    printf("%d %d\n",map$$2char$pint$phcharpint_operator_load_element(m2_277,"AAA"),map$$2char$pint$phcharpint_operator_load_element(m2_277,"BBB"));
                                                                      ^~~~~~
b.c.c:1383:87: note: passing argument to parameter 'self' here
static int map$$2char$pint$phcharpint_operator_load_element(struct map$p$2char$pint$* self, char* key);
                                                                                      ^
b.c.c:3281:134: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    printf("%d %d\n",map$$2char$pint$phcharpint_operator_load_element(m2_277,"AAA"),map$$2char$pint$phcharpint_operator_load_element(m2_277,"BBB"));
                                                                                                                                     ^~~~~~
b.c.c:1383:87: note: passing argument to parameter 'self' here
static int map$$2char$pint$phcharpint_operator_load_element(struct map$p$2char$pint$* self, char* key);
                                                                                      ^
b.c.c:3282:68: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    xassert("map clone",map$$2char$pint$phcharpint_operator_equals(m1_260,m2_277));
                                                                   ^~~~~~
b.c.c:1391:83: note: passing argument to parameter 'left' here
static _Bool map$$2char$pint$phcharpint_operator_equals(struct map$p$2char$pint$* left, struct map$p$2char$pint$* right);
                                                                                  ^
b.c.c:3282:75: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    xassert("map clone",map$$2char$pint$phcharpint_operator_equals(m1_260,m2_277));
                                                                          ^~~~~~
b.c.c:1391:115: note: passing argument to parameter 'right' here
static _Bool map$$2char$pint$phcharpint_operator_equals(struct map$p$2char$pint$* left, struct map$p$2char$pint$* right);
                                                                                                                  ^
b.c.c:3283:160: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$ph$2char$pint$ *' [-Wincompatible-pointer-types]
    __map_value2___288=(struct map$ph$2char$pint$*)come_increment_ref_count(((struct map$ph$2char$pint$*)(right_value171=map$$2char$pint$phcharpint_initialize((struct map$$2char$pint$*)come_increment_ref_count(((struct map$$2char$pint$*)(right_value170=(struct map$$2char$pint$*)come_calloc(1, sizeof(struct map$$2char$pint$)*(1)))))))));
                                                                                                                                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1364:100: note: passing argument to parameter 'self' here
static struct map$ph$2char$pint$* map$$2char$pint$phcharpint_initialize(struct map$ph$2char$pint$* self);
                                                                                                   ^
b.c.c:3283:23: warning: incompatible pointer types assigning to 'struct map$$2char$pint$ *' from 'struct map$ph$2char$pint$ *' [-Wincompatible-pointer-types]
    __map_value2___288=(struct map$ph$2char$pint$*)come_increment_ref_count(((struct map$ph$2char$pint$*)(right_value171=map$$2char$pint$phcharpint_initialize((struct map$$2char$pint$*)come_increment_ref_count(((struct map$$2char$pint$*)(right_value170=(struct map$$2char$pint$*)come_calloc(1, sizeof(struct map$$2char$pint$)*(1)))))))));
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3286:39: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    map$$2char$pint$phcharpint_insert(__map_value2___288,"AAA",1);
                                      ^~~~~~~~~~~~~~~~~~
b.c.c:1372:73: note: passing argument to parameter 'self' here
static void map$$2char$pint$phcharpint_insert(struct map$p$2char$pint$* self, char* key, int item);
                                                                        ^
b.c.c:3287:39: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    map$$2char$pint$phcharpint_insert(__map_value2___288,"BBB",2);
                                      ^~~~~~~~~~~~~~~~~~
b.c.c:1372:73: note: passing argument to parameter 'self' here
static void map$$2char$pint$phcharpint_insert(struct map$p$2char$pint$* self, char* key, int item);
                                                                        ^
b.c.c:3288:160: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$ph$2char$pint$ *' [-Wincompatible-pointer-types]
    __map_value3___289=(struct map$ph$2char$pint$*)come_increment_ref_count(((struct map$ph$2char$pint$*)(right_value173=map$$2char$pint$phcharpint_initialize((struct map$$2char$pint$*)come_increment_ref_count(((struct map$$2char$pint$*)(right_value172=(struct map$$2char$pint$*)come_calloc(1, sizeof(struct map$$2char$pint$)*(1)))))))));
                                                                                                                                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1364:100: note: passing argument to parameter 'self' here
static struct map$ph$2char$pint$* map$$2char$pint$phcharpint_initialize(struct map$ph$2char$pint$* self);
                                                                                                   ^
b.c.c:3288:23: warning: incompatible pointer types assigning to 'struct map$$2char$pint$ *' from 'struct map$ph$2char$pint$ *' [-Wincompatible-pointer-types]
    __map_value3___289=(struct map$ph$2char$pint$*)come_increment_ref_count(((struct map$ph$2char$pint$*)(right_value173=map$$2char$pint$phcharpint_initialize((struct map$$2char$pint$*)come_increment_ref_count(((struct map$$2char$pint$*)(right_value172=(struct map$$2char$pint$*)come_calloc(1, sizeof(struct map$$2char$pint$)*(1)))))))));
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3291:39: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    map$$2char$pint$phcharpint_insert(__map_value3___289,"AAA",1);
                                      ^~~~~~~~~~~~~~~~~~
b.c.c:1372:73: note: passing argument to parameter 'self' here
static void map$$2char$pint$phcharpint_insert(struct map$p$2char$pint$* self, char* key, int item);
                                                                        ^
b.c.c:3292:39: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    map$$2char$pint$phcharpint_insert(__map_value3___289,"BBB",2);
                                      ^~~~~~~~~~~~~~~~~~
b.c.c:1372:73: note: passing argument to parameter 'self' here
static void map$$2char$pint$phcharpint_insert(struct map$p$2char$pint$* self, char* key, int item);
                                                                        ^
b.c.c:3293:69: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    xassert("map equals",map$$2char$pint$phcharpint_operator_equals(__map_value2___288,__map_value3___289));
                                                                    ^~~~~~~~~~~~~~~~~~
b.c.c:1391:83: note: passing argument to parameter 'left' here
static _Bool map$$2char$pint$phcharpint_operator_equals(struct map$p$2char$pint$* left, struct map$p$2char$pint$* right);
                                                                                  ^
b.c.c:3293:88: warning: incompatible pointer types passing 'struct map$$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
    xassert("map equals",map$$2char$pint$phcharpint_operator_equals(__map_value2___288,__map_value3___289));
                                                                                       ^~~~~~~~~~~~~~~~~~
b.c.c:1391:115: note: passing argument to parameter 'right' here
static _Bool map$$2char$pint$phcharpint_operator_equals(struct map$p$2char$pint$* left, struct map$p$2char$pint$* right);
                                                                                                                  ^
b.c.c:3294:135: warning: incompatible pointer types passing 'struct tuple1$$1int$ *' to parameter of type 'struct tuple1$ph$1int$ *' [-Wincompatible-pointer-types]
    tt1_290=(struct tuple1$ph$1int$*)come_increment_ref_count(((struct tuple1$ph$1int$*)(right_value175=tuple1$$1int$phint_initialize((struct tuple1$$1int$*)come_increment_ref_count(((struct tuple1$$1int$*)(right_value174=(struct tuple1$$1int$*)come_calloc(1, sizeof(struct tuple1$$1int$)*(1))))),1))));
                                                                                                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1394:86: note: passing argument to parameter 'self' here
static struct tuple1$ph$1int$* tuple1$$1int$phint_initialize(struct tuple1$ph$1int$* self, int v1);
                                                                                     ^
b.c.c:3294:12: warning: incompatible pointer types assigning to 'struct tuple1$$1int$ *' from 'struct tuple1$ph$1int$ *' [-Wincompatible-pointer-types]
    tt1_290=(struct tuple1$ph$1int$*)come_increment_ref_count(((struct tuple1$ph$1int$*)(right_value175=tuple1$$1int$phint_initialize((struct tuple1$$1int$*)come_increment_ref_count(((struct tuple1$$1int$*)(right_value174=(struct tuple1$$1int$*)come_calloc(1, sizeof(struct tuple1$$1int$)*(1))))),1))));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3299:147: warning: incompatible pointer types passing 'struct tuple1$$1char$ph *' to parameter of type 'struct tuple1$ph$1char$ph *' [-Wincompatible-pointer-types]
    tt2_291=(struct tuple1$ph$1char$ph*)come_increment_ref_count(((struct tuple1$ph$1char$ph*)(right_value178=tuple1$$1char$phphcharph_initialize((struct tuple1$$1char$ph*)come_increment_ref_count(((struct tuple1$$1char$ph*)(right_value176=(struct tuple1$$1char$ph*)come_calloc(1, sizeof(struct tuple1$$1char$ph)*(1))))),(char*)come_increment_ref_count(((char*)(right_value177=__builtin_string("ABC"))))))));
                                                                                                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1397:98: note: passing argument to parameter 'self' here
static struct tuple1$ph$1char$ph* tuple1$$1char$phphcharph_initialize(struct tuple1$ph$1char$ph* self, char* v1);
                                                                                                 ^
b.c.c:3299:12: warning: incompatible pointer types assigning to 'struct tuple1$$1char$ph *' from 'struct tuple1$ph$1char$ph *' [-Wincompatible-pointer-types]
    tt2_291=(struct tuple1$ph$1char$ph*)come_increment_ref_count(((struct tuple1$ph$1char$ph*)(right_value178=tuple1$$1char$phphcharph_initialize((struct tuple1$$1char$ph*)come_increment_ref_count(((struct tuple1$$1char$ph*)(right_value176=(struct tuple1$$1char$ph*)come_calloc(1, sizeof(struct tuple1$$1char$ph)*(1))))),(char*)come_increment_ref_count(((char*)(right_value177=__builtin_string("ABC"))))))));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3309:136: warning: incompatible pointer types passing 'struct tuple1$$1int$ *' to parameter of type 'struct tuple1$ph$1int$ *' [-Wincompatible-pointer-types]
    ttt1_294=(struct tuple1$ph$1int$*)come_increment_ref_count(((struct tuple1$ph$1int$*)(right_value182=tuple1$$1int$phint_initialize((struct tuple1$$1int$*)come_increment_ref_count(((struct tuple1$$1int$*)(right_value181=(struct tuple1$$1int$*)come_calloc(1, sizeof(struct tuple1$$1int$)*(1))))),1))));
                                                                                                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1394:86: note: passing argument to parameter 'self' here
static struct tuple1$ph$1int$* tuple1$$1int$phint_initialize(struct tuple1$ph$1int$* self, int v1);
                                                                                     ^
b.c.c:3309:13: warning: incompatible pointer types assigning to 'struct tuple1$$1int$ *' from 'struct tuple1$ph$1int$ *' [-Wincompatible-pointer-types]
    ttt1_294=(struct tuple1$ph$1int$*)come_increment_ref_count(((struct tuple1$ph$1int$*)(right_value182=tuple1$$1int$phint_initialize((struct tuple1$$1int$*)come_increment_ref_count(((struct tuple1$$1int$*)(right_value181=(struct tuple1$$1int$*)come_calloc(1, sizeof(struct tuple1$$1int$)*(1))))),1))));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3314:148: warning: incompatible pointer types passing 'struct tuple1$$1char$ph *' to parameter of type 'struct tuple1$ph$1char$ph *' [-Wincompatible-pointer-types]
    ttt2_295=(struct tuple1$ph$1char$ph*)come_increment_ref_count(((struct tuple1$ph$1char$ph*)(right_value185=tuple1$$1char$phphcharph_initialize((struct tuple1$$1char$ph*)come_increment_ref_count(((struct tuple1$$1char$ph*)(right_value183=(struct tuple1$$1char$ph*)come_calloc(1, sizeof(struct tuple1$$1char$ph)*(1))))),(char*)come_increment_ref_count(((char*)(right_value184=__builtin_string("ABC"))))))));
                                                                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1397:98: note: passing argument to parameter 'self' here
static struct tuple1$ph$1char$ph* tuple1$$1char$phphcharph_initialize(struct tuple1$ph$1char$ph* self, char* v1);
                                                                                                 ^
b.c.c:3314:13: warning: incompatible pointer types assigning to 'struct tuple1$$1char$ph *' from 'struct tuple1$ph$1char$ph *' [-Wincompatible-pointer-types]
    ttt2_295=(struct tuple1$ph$1char$ph*)come_increment_ref_count(((struct tuple1$ph$1char$ph*)(right_value185=tuple1$$1char$phphcharph_initialize((struct tuple1$$1char$ph*)come_increment_ref_count(((struct tuple1$$1char$ph*)(right_value183=(struct tuple1$$1char$ph*)come_calloc(1, sizeof(struct tuple1$$1char$ph)*(1))))),(char*)come_increment_ref_count(((char*)(right_value184=__builtin_string("ABC"))))))));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3325:175: warning: incompatible pointer types passing 'struct tuple2$$2char$phint$ *' to parameter of type 'struct tuple2$ph$2char$phint$ *' [-Wincompatible-pointer-types]
    __tuple_value1___297=(struct tuple2$ph$2char$phint$*)come_increment_ref_count(((struct tuple2$ph$2char$phint$*)(right_value189=tuple2$$2char$phint$phcharphint_initialize((struct tuple2$$2char$phint$*)come_increment_ref_count(((struct tuple2$$2char$phint$*)(right_value187=(struct tuple2$$2char$phint$*)come_calloc(1, sizeof(struct tuple2$$2char$phint$)*(1))))),(char*)come_increment_ref_count(((char*)(right_value188=__builtin_string("ABC")))),5))));
                                                                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1404:113: note: passing argument to parameter 'self' here
static struct tuple2$ph$2char$phint$* tuple2$$2char$phint$phcharphint_initialize(struct tuple2$ph$2char$phint$* self, char* v1, int v2);
                                                                                                                ^
b.c.c:3329:11: warning: incompatible pointer types assigning to 'struct tuple2$$2char$phint$ *' from 'struct tuple2$ph$2char$phint$ *' [-Wincompatible-pointer-types]
    t4_298=(struct tuple2$ph$2char$phint$*)come_increment_ref_count(__tuple_value1___297);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3332:171: warning: incompatible pointer types passing 'struct tuple2$$2char$pint$ *' to parameter of type 'struct tuple2$ph$2char$pint$ *' [-Wincompatible-pointer-types]
    __tuple_value2___299=(struct tuple2$ph$2char$pint$*)come_increment_ref_count(((struct tuple2$ph$2char$pint$*)(right_value192=tuple2$$2char$pint$phcharpint_initialize((struct tuple2$$2char$pint$*)come_increment_ref_count(((struct tuple2$$2char$pint$*)(right_value191=(struct tuple2$$2char$pint$*)come_calloc(1, sizeof(struct tuple2$$2char$pint$)*(1))))),"AAA",7))));
                                                                                                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1407:109: note: passing argument to parameter 'self' here
static struct tuple2$ph$2char$pint$* tuple2$$2char$pint$phcharpint_initialize(struct tuple2$ph$2char$pint$* self, char* v1, int v2);
                                                                                                            ^
b.c.c:3335:171: warning: incompatible pointer types passing 'struct tuple2$$2char$pint$ *' to parameter of type 'struct tuple2$ph$2char$pint$ *' [-Wincompatible-pointer-types]
    __tuple_value3___300=(struct tuple2$ph$2char$pint$*)come_increment_ref_count(((struct tuple2$ph$2char$pint$*)(right_value194=tuple2$$2char$pint$phcharpint_initialize((struct tuple2$$2char$pint$*)come_increment_ref_count(((struct tuple2$$2char$pint$*)(right_value193=(struct tuple2$$2char$pint$*)come_calloc(1, sizeof(struct tuple2$$2char$pint$)*(1))))),"AAA",7))));
                                                                                                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1407:109: note: passing argument to parameter 'self' here
static struct tuple2$ph$2char$pint$* tuple2$$2char$pint$phcharpint_initialize(struct tuple2$ph$2char$pint$* self, char* v1, int v2);
                                                                                                            ^
b.c.c:3339:171: warning: incompatible pointer types passing 'struct tuple2$$2char$pint$ *' to parameter of type 'struct tuple2$ph$2char$pint$ *' [-Wincompatible-pointer-types]
    __tuple_value4___301=(struct tuple2$ph$2char$pint$*)come_increment_ref_count(((struct tuple2$ph$2char$pint$*)(right_value196=tuple2$$2char$pint$phcharpint_initialize((struct tuple2$$2char$pint$*)come_increment_ref_count(((struct tuple2$$2char$pint$*)(right_value195=(struct tuple2$$2char$pint$*)come_calloc(1, sizeof(struct tuple2$$2char$pint$)*(1))))),"AAA",8))));
                                                                                                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1407:109: note: passing argument to parameter 'self' here
static struct tuple2$ph$2char$pint$* tuple2$$2char$pint$phcharpint_initialize(struct tuple2$ph$2char$pint$* self, char* v1, int v2);
                                                                                                            ^
b.c.c:3342:171: warning: incompatible pointer types passing 'struct tuple2$$2char$pint$ *' to parameter of type 'struct tuple2$ph$2char$pint$ *' [-Wincompatible-pointer-types]
    __tuple_value5___302=(struct tuple2$ph$2char$pint$*)come_increment_ref_count(((struct tuple2$ph$2char$pint$*)(right_value198=tuple2$$2char$pint$phcharpint_initialize((struct tuple2$$2char$pint$*)come_increment_ref_count(((struct tuple2$$2char$pint$*)(right_value197=(struct tuple2$$2char$pint$*)come_calloc(1, sizeof(struct tuple2$$2char$pint$)*(1))))),"AAA",7))));
                                                                                                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1407:109: note: passing argument to parameter 'self' here
static struct tuple2$ph$2char$pint$* tuple2$$2char$pint$phcharpint_initialize(struct tuple2$ph$2char$pint$* self, char* v1, int v2);
                                                                                                            ^
b.c.c:3349:26: warning: incompatible function pointer types assigning to 'void (*)(void *)' from 'void (struct sDataA *)' [-Wincompatible-function-pointer-types]
    _inf_value1->finalize=sDataA_finalize;
                         ^~~~~~~~~~~~~~~~
b.c.c:3350:23: warning: incompatible function pointer types assigning to 'void *(*)(void *)' from 'struct sDataA *(struct sDataA *)' [-Wincompatible-function-pointer-types]
    _inf_value1->clone=sDataA_clone;
                      ^~~~~~~~~~~~~
b.c.c:3351:21: warning: incompatible function pointer types assigning to 'int (*)(void *, int, int)' from 'int (struct sDataA *, int, int)' [-Wincompatible-function-pointer-types]
    _inf_value1->fun=sDataA_fun;
                    ^~~~~~~~~~~
b.c.c:3352:17: warning: incompatible pointer types assigning to 'struct IA **' from 'struct IA *' [-Wincompatible-pointer-types]
    _inf_valueX1=(struct IA*)come_increment_ref_count(((struct IA*)(right_value202=_inf_value1)));
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3354:11: warning: incompatible pointer types assigning to 'struct IA *' from 'struct IA **'; dereference with * [-Wincompatible-pointer-types]
    ia_304=_inf_valueX1;
          ^~~~~~~~~~~~~
           *
b.c.c:3360:134: warning: incompatible pointer types passing 'struct list$$1IA$ph *' to parameter of type 'struct list$ph$1IA$ph *' [-Wincompatible-pointer-types]
    liIA_307=(struct list$ph$1IA$ph*)come_increment_ref_count(((struct list$ph$1IA$ph*)(right_value204=list$$1IA$phphIAph_initialize((struct list$$1IA$ph*)come_increment_ref_count(((struct list$$1IA$ph*)(right_value203=(struct list$$1IA$ph*)come_calloc(1, sizeof(struct list$$1IA$ph)*(1)))))))));
                                                                                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1414:84: note: passing argument to parameter 'self' here
static struct list$ph$1IA$ph* list$$1IA$phphIAph_initialize(struct list$ph$1IA$ph* self);
                                                                                   ^
b.c.c:3360:13: warning: incompatible pointer types assigning to 'struct list$$1IA$ph *' from 'struct list$ph$1IA$ph *' [-Wincompatible-pointer-types]
    liIA_307=(struct list$ph$1IA$ph*)come_increment_ref_count(((struct list$ph$1IA$ph*)(right_value204=list$$1IA$phphIAph_initialize((struct list$$1IA$ph*)come_increment_ref_count(((struct list$$1IA$ph*)(right_value203=(struct list$$1IA$ph*)come_calloc(1, sizeof(struct list$$1IA$ph)*(1)))))))));
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3366:26: warning: incompatible function pointer types assigning to 'void (*)(void *)' from 'void (struct sDataA *)' [-Wincompatible-function-pointer-types]
    _inf_value2->finalize=sDataA_finalize;
                         ^~~~~~~~~~~~~~~~
b.c.c:3367:23: warning: incompatible function pointer types assigning to 'void *(*)(void *)' from 'struct sDataA *(struct sDataA *)' [-Wincompatible-function-pointer-types]
    _inf_value2->clone=sDataA_clone;
                      ^~~~~~~~~~~~~
b.c.c:3368:21: warning: incompatible function pointer types assigning to 'int (*)(void *, int, int)' from 'int (struct sDataA *, int, int)' [-Wincompatible-function-pointer-types]
    _inf_value2->fun=sDataA_fun;
                    ^~~~~~~~~~~
b.c.c:3369:17: warning: incompatible pointer types assigning to 'struct IA **' from 'struct IA *' [-Wincompatible-pointer-types]
    _inf_valueX5=(struct IA*)come_increment_ref_count(((struct IA*)(right_value211=_inf_value2)));
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3371:34: warning: incompatible pointer types passing 'struct list$$1IA$ph *' to parameter of type 'struct list$p$1IA$ph *' [-Wincompatible-pointer-types]
    list$$1IA$phphIAph_push_back(liIA_307,_inf_valueX5);
                                 ^~~~~~~~
b.c.c:1417:64: note: passing argument to parameter 'self' here
static void list$$1IA$phphIAph_push_back(struct list$p$1IA$ph* self, struct IA* item);
                                                               ^
b.c.c:3371:43: warning: incompatible pointer types passing 'struct IA **' to parameter of type 'struct IA *'; dereference with * [-Wincompatible-pointer-types]
    list$$1IA$phphIAph_push_back(liIA_307,_inf_valueX5);
                                          ^~~~~~~~~~~~
                                          *
b.c.c:1417:81: note: passing argument to parameter 'item' here
static void list$$1IA$phphIAph_push_back(struct list$p$1IA$ph* self, struct IA* item);
                                                                                ^
b.c.c:3379:26: warning: incompatible function pointer types assigning to 'void (*)(void *)' from 'void (struct sDataA *)' [-Wincompatible-function-pointer-types]
    _inf_value3->finalize=sDataA_finalize;
                         ^~~~~~~~~~~~~~~~
b.c.c:3380:23: warning: incompatible function pointer types assigning to 'void *(*)(void *)' from 'struct sDataA *(struct sDataA *)' [-Wincompatible-function-pointer-types]
    _inf_value3->clone=sDataA_clone;
                      ^~~~~~~~~~~~~
b.c.c:3381:21: warning: incompatible function pointer types assigning to 'int (*)(void *, int, int)' from 'int (struct sDataA *, int, int)' [-Wincompatible-function-pointer-types]
    _inf_value3->fun=sDataA_fun;
                    ^~~~~~~~~~~
b.c.c:3382:17: warning: incompatible pointer types assigning to 'struct IA **' from 'struct IA *' [-Wincompatible-pointer-types]
    _inf_valueX6=(struct IA*)come_increment_ref_count(((struct IA*)(right_value215=_inf_value3)));
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3384:34: warning: incompatible pointer types passing 'struct list$$1IA$ph *' to parameter of type 'struct list$p$1IA$ph *' [-Wincompatible-pointer-types]
    list$$1IA$phphIAph_push_back(liIA_307,_inf_valueX6);
                                 ^~~~~~~~
b.c.c:1417:64: note: passing argument to parameter 'self' here
static void list$$1IA$phphIAph_push_back(struct list$p$1IA$ph* self, struct IA* item);
                                                               ^
b.c.c:3384:43: warning: incompatible pointer types passing 'struct IA **' to parameter of type 'struct IA *'; dereference with * [-Wincompatible-pointer-types]
    list$$1IA$phphIAph_push_back(liIA_307,_inf_valueX6);
                                          ^~~~~~~~~~~~
                                          *
b.c.c:1417:81: note: passing argument to parameter 'item' here
static void list$$1IA$phphIAph_push_back(struct list$p$1IA$ph* self, struct IA* item);
                                                                                ^
b.c.c:3392:26: warning: incompatible function pointer types assigning to 'void (*)(void *)' from 'void (struct sDataA *)' [-Wincompatible-function-pointer-types]
    _inf_value4->finalize=sDataA_finalize;
                         ^~~~~~~~~~~~~~~~
b.c.c:3393:23: warning: incompatible function pointer types assigning to 'void *(*)(void *)' from 'struct sDataA *(struct sDataA *)' [-Wincompatible-function-pointer-types]
    _inf_value4->clone=sDataA_clone;
                      ^~~~~~~~~~~~~
b.c.c:3394:21: warning: incompatible function pointer types assigning to 'int (*)(void *, int, int)' from 'int (struct sDataA *, int, int)' [-Wincompatible-function-pointer-types]
    _inf_value4->fun=sDataA_fun;
                    ^~~~~~~~~~~
b.c.c:3395:17: warning: incompatible pointer types assigning to 'struct IA **' from 'struct IA *' [-Wincompatible-pointer-types]
    _inf_valueX7=(struct IA*)come_increment_ref_count(((struct IA*)(right_value219=_inf_value4)));
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3397:34: warning: incompatible pointer types passing 'struct list$$1IA$ph *' to parameter of type 'struct list$p$1IA$ph *' [-Wincompatible-pointer-types]
    list$$1IA$phphIAph_push_back(liIA_307,_inf_valueX7);
                                 ^~~~~~~~
b.c.c:1417:64: note: passing argument to parameter 'self' here
static void list$$1IA$phphIAph_push_back(struct list$p$1IA$ph* self, struct IA* item);
                                                               ^
b.c.c:3397:43: warning: incompatible pointer types passing 'struct IA **' to parameter of type 'struct IA *'; dereference with * [-Wincompatible-pointer-types]
    list$$1IA$phphIAph_push_back(liIA_307,_inf_valueX7);
                                          ^~~~~~~~~~~~
                                          *
b.c.c:1417:81: note: passing argument to parameter 'item' here
static void list$$1IA$phphIAph_push_back(struct list$p$1IA$ph* self, struct IA* item);
                                                                                ^
b.c.c:3403:37: warning: incompatible pointer types passing 'struct list$$1IA$ph *' to parameter of type 'struct list$p$1IA$ph *' [-Wincompatible-pointer-types]
    it_317=list$$1IA$phphIAph_begin((liIA_307));
                                    ^~~~~~~~~~
b.c.c:1418:66: note: passing argument to parameter 'self' here
static struct IA* list$$1IA$phphIAph_begin(struct list$p$1IA$ph* self);
                                                                 ^
b.c.c:3404:29: warning: incompatible pointer types passing 'struct list$$1IA$ph *' to parameter of type 'struct list$p$1IA$ph *' [-Wincompatible-pointer-types]
    !list$$1IA$phphIAph_end((liIA_307));
                            ^~~~~~~~~~
b.c.c:1419:59: note: passing argument to parameter 'self' here
static _Bool list$$1IA$phphIAph_end(struct list$p$1IA$ph* self);
                                                          ^
b.c.c:3405:36: warning: incompatible pointer types passing 'struct list$$1IA$ph *' to parameter of type 'struct list$p$1IA$ph *' [-Wincompatible-pointer-types]
    it_317=list$$1IA$phphIAph_next((liIA_307))
                                   ^~~~~~~~~~
b.c.c:1420:65: note: passing argument to parameter 'self' here
static struct IA* list$$1IA$phphIAph_next(struct list$p$1IA$ph* self);
                                                                ^
b.c.c:3409:182: warning: incompatible pointer types passing 'struct tuple3$$3int$int$bool$ *' to parameter of type 'struct tuple3$ph$3int$int$bool$ *' [-Wincompatible-pointer-types]
    __tuple_value6___319=(struct tuple3$ph$3int$int$bool$*)come_increment_ref_count(((struct tuple3$ph$3int$int$bool$*)(right_value221=tuple3$$3int$int$bool$phintintbool_initialize((struct tuple3$$3int$int$bool$*)come_increment_ref_count(((struct tuple3$$3int$int$bool$*)(right_value220=(struct tuple3$$3int$int$bool$*)come_calloc(1, sizeof(struct tuple3$$3int$int$bool$)*(1))))),1,2,(_Bool)0))));
                                                                                                                                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1421:120: note: passing argument to parameter 'self' here
static struct tuple3$ph$3int$int$bool$* tuple3$$3int$int$bool$phintintbool_initialize(struct tuple3$ph$3int$int$bool$* self, int v1, int v2, _Bool v3);
                                                                                                                       ^
b.c.c:3475:55: warning: incompatible pointer types passing 'struct tuple2$ph$2int$bool$ *' to parameter of type 'struct tuple2$p$2int$bool$ *' [-Wincompatible-pointer-types]
    xZZZZZZZZ_322=tuple2$ph$2int$bool$phintbool_catch(((struct tuple2$ph$2int$bool$*)(right_value222=fun_exception(1,2))),&__current_stack6__,method_block6);
                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1424:76: note: passing argument to parameter 'self' here
static int tuple2$ph$2int$bool$phintbool_catch(struct tuple2$p$2int$bool$* self, void* parent, void (*block)(void*));
                                                                           ^
b.c.c:3475:143: warning: incompatible function pointer types passing 'void (struct __current_stack6__ *)' to parameter of type 'void (*)(void *)' [-Wincompatible-function-pointer-types]
    xZZZZZZZZ_322=tuple2$ph$2int$bool$phintbool_catch(((struct tuple2$ph$2int$bool$*)(right_value222=fun_exception(1,2))),&__current_stack6__,method_block6);
                                                                                                                                              ^~~~~~~~~~~~~
b.c.c:1424:103: note: passing argument to parameter 'block' here
static int tuple2$ph$2int$bool$phintbool_catch(struct tuple2$p$2int$bool$* self, void* parent, void (*block)(void*));
                                                                                                      ^
b.c.c:2940:25: warning: expression result unused [-Wunused-value]
        if(data_106.a) {(char*)come_decrement_ref_count(data_106.a,0,0); }
                        ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:2951:22: warning: expression result unused [-Wunused-value]
    if(data_108->a) {(char*)come_decrement_ref_count(data_108->a,0,0); }
                     ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:2954:6: warning: expression result unused [-Wunused-value]
    ((int*)(right_value72=funHeap(7,7)));
     ^     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:2970:6: warning: expression result unused [-Wunused-value]
    ((int*)(right_value78=(int*)come_calloc(1, sizeof(int)*(1))));
     ^     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3149:20: warning: expression result unused [-Wunused-value]
    if(axyzX_205) {(int*)come_decrement_ref_count(axyzX_205,0,0); }
                   ^     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3152:20: warning: expression result unused [-Wunused-value]
    if(axyzX_205) {(int*)come_decrement_ref_count(axyzX_205,0,0); }
                   ^     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3303:22: warning: expression result unused [-Wunused-value]
    if(tt2_291->v1) {(char*)come_decrement_ref_count(tt2_291->v1,0,0); }
                     ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3318:23: warning: expression result unused [-Wunused-value]
    if(ttt2_295->v1) {(char*)come_decrement_ref_count(ttt2_295->v1,0,0); }
                      ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3550:38: warning: incompatible integer to pointer conversion initializing 'struct list_item$p$1char$ph *' with an expression of type 'int' [-Wint-conversion]
        struct list_item$p$1char$ph* __result__ = self->it==((void*)0);
                                     ^            ~~~~~~~~~~~~~~~~~~~~
b.c.c:3581:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_120=self->head;
                  ^~~~~~~~~~~
b.c.c:3586:23: warning: incompatible pointer types assigning to 'struct list_item$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                it_120=it_120->next;
                      ^~~~~~~~~~~~~
b.c.c:3596:15: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
        it_123=self->head;
              ^~~~~~~~~~~
b.c.c:3601:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_123=it_123->next;
                  ^~~~~~~~~~~~~
b.c.c:3621:23: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->tail=litem_125;
                      ^~~~~~~~~~
b.c.c:3622:23: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->head=litem_125;
                      ^~~~~~~~~~
b.c.c:3629:23: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->tail=litem_126;
                      ^~~~~~~~~~
b.c.c:3630:29: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->head->next=litem_126;
                            ^~~~~~~~~~
b.c.c:3637:29: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->tail->next=litem_127;
                            ^~~~~~~~~~
b.c.c:3638:23: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->tail=litem_127;
                      ^~~~~~~~~~
b.c.c:3657:35: warning: incompatible integer to pointer conversion initializing 'struct list_item$p$1int$ *' with an expression of type 'int' [-Wint-conversion]
        struct list_item$p$1int$* __result__ = self->it==((void*)0);
                                  ^            ~~~~~~~~~~~~~~~~~~~~
b.c.c:3681:15: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
        it_132=self->head;
              ^~~~~~~~~~~
b.c.c:3689:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_132=it_132->next;
                  ^~~~~~~~~~~~~
b.c.c:3712:15: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
        it_141=self->head;
              ^~~~~~~~~~~
b.c.c:3719:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_141=it_141->next;
                  ^~~~~~~~~~~~~
b.c.c:3755:29: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->head->prev=litem_146;
                            ^~~~~~~~~~
b.c.c:3756:23: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->head=litem_146;
                      ^~~~~~~~~~
b.c.c:3764:29: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->tail->prev=litem_147;
                            ^~~~~~~~~~
b.c.c:3765:29: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->head->next=litem_147;
                            ^~~~~~~~~~
b.c.c:3769:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_148=self->head;
                  ^~~~~~~~~~~
b.c.c:3775:36: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                    litem_150->next=it_148;
                                   ^~~~~~~
b.c.c:3777:39: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                    it_148->prev->next=litem_150;
                                      ^~~~~~~~~~
b.c.c:3778:33: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                    it_148->prev=litem_150;
                                ^~~~~~~~~~
b.c.c:3781:23: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                it_148=it_148->next;
                      ^~~~~~~~~~~~~
b.c.c:3802:31: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                    self->tail=litem_143;
                              ^~~~~~~~~~
b.c.c:3803:31: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                    self->head=litem_143;
                              ^~~~~~~~~~
b.c.c:3810:31: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                    self->tail=litem_144;
                              ^~~~~~~~~~
b.c.c:3811:37: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                    self->head->next=litem_144;
                                    ^~~~~~~~~~
b.c.c:3818:37: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                    self->tail->next=litem_145;
                                    ^~~~~~~~~~
b.c.c:3819:31: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                    self->tail=litem_145;
                              ^~~~~~~~~~
b.c.c:3854:29: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
            self->head->prev=litem_154;
                            ^~~~~~~~~~
b.c.c:3855:23: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
            self->head=litem_154;
                      ^~~~~~~~~~
b.c.c:3864:29: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
            self->tail->prev=litem_155;
                            ^~~~~~~~~~
b.c.c:3865:29: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
            self->head->next=litem_155;
                            ^~~~~~~~~~
b.c.c:3869:19: warning: incompatible pointer types assigning to 'struct list_item$$1char$ph$$1char$ph *' from 'struct list_item$p$1char$ph *' [-Wincompatible-pointer-types]
            it_156=self->head;
                  ^~~~~~~~~~~
b.c.c:3875:36: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
                    litem_158->next=it_156;
                                   ^~~~~~~
b.c.c:3878:39: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
                    it_156->prev->next=litem_158;
                                      ^~~~~~~~~~
b.c.c:3879:33: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
                    it_156->prev=litem_158;
                                ^~~~~~~~~~
b.c.c:3882:23: warning: incompatible pointer types assigning to 'struct list_item$$1char$ph$$1char$ph *' from 'struct list_item$p$1char$ph *' [-Wincompatible-pointer-types]
                it_156=it_156->next;
                      ^~~~~~~~~~~~~
b.c.c:3852:34: warning: expression result unused [-Wunused-value]
            if(litem_154->item) {(char*)come_decrement_ref_count(litem_154->item,0,0); }
                                 ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3862:34: warning: expression result unused [-Wunused-value]
            if(litem_155->item) {(char*)come_decrement_ref_count(litem_155->item,0,0); }
                                 ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3876:42: warning: expression result unused [-Wunused-value]
                    if(litem_158->item) {(char*)come_decrement_ref_count(litem_158->item,0,0); }
                                         ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3905:31: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
                    self->tail=litem_151;
                              ^~~~~~~~~~
b.c.c:3906:31: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
                    self->head=litem_151;
                              ^~~~~~~~~~
b.c.c:3914:31: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
                    self->tail=litem_152;
                              ^~~~~~~~~~
b.c.c:3915:37: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
                    self->head->next=litem_152;
                                    ^~~~~~~~~~
b.c.c:3923:37: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
                    self->tail->next=litem_153;
                                    ^~~~~~~~~~
b.c.c:3924:31: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
                    self->tail=litem_153;
                              ^~~~~~~~~~
b.c.c:3903:42: warning: expression result unused [-Wunused-value]
                    if(litem_151->item) {(char*)come_decrement_ref_count(litem_151->item,0,0); }
                                         ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3912:42: warning: expression result unused [-Wunused-value]
                    if(litem_152->item) {(char*)come_decrement_ref_count(litem_152->item,0,0); }
                                         ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3921:42: warning: expression result unused [-Wunused-value]
                    if(litem_153->item) {(char*)come_decrement_ref_count(litem_153->item,0,0); }
                                         ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:3938:15: warning: incompatible pointer types assigning to 'struct list_item$$1char$ph$$1char$ph *' from 'struct list_item$p$1char$ph *' [-Wincompatible-pointer-types]
        it_159=self->head;
              ^~~~~~~~~~~
b.c.c:3945:19: warning: incompatible pointer types assigning to 'struct list_item$$1char$ph$$1char$ph *' from 'struct list_item$p$1char$ph *' [-Wincompatible-pointer-types]
            it_159=it_159->next;
                  ^~~~~~~~~~~~~
b.c.c:3957:15: warning: incompatible pointer types assigning to 'struct list_item$$1char$ph$$1char$ph *' from 'struct list_item$p$1char$ph *' [-Wincompatible-pointer-types]
        it_161=self->head;
              ^~~~~~~~~~~
b.c.c:3960:19: warning: incompatible pointer types assigning to 'struct list_item$$1char$ph$$1char$ph *' from 'struct list_item$p$1char$ph *' [-Wincompatible-pointer-types]
            it_161=it_161->next;
                  ^~~~~~~~~~~~~
b.c.c:4028:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_166=self->head;
                  ^~~~~~~~~~~
b.c.c:4033:27: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                    it_166=it_166->next;
                          ^~~~~~~~~~~~~
b.c.c:4039:31: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                    self->head=it_166;
                              ^~~~~~~
b.c.c:4044:27: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                    it_166=it_166->next;
                          ^~~~~~~~~~~~~
b.c.c:4050:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_169=self->head;
                  ^~~~~~~~~~~
b.c.c:4059:27: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                    it_169=it_169->next;
                          ^~~~~~~~~~~~~
b.c.c:4065:27: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                    it_169=it_169->next;
                          ^~~~~~~~~~~~~
b.c.c:4071:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_172=self->head;
                  ^~~~~~~~~~~
b.c.c:4077:37: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                    head_prev_it_173=it_172->prev;
                                    ^~~~~~~~~~~~~
b.c.c:4084:27: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                    it_172=it_172->next;
                          ^~~~~~~~~~~~~
b.c.c:4090:27: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                    it_172=it_172->next;
                          ^~~~~~~~~~~~~
b.c.c:4095:39: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                head_prev_it_173->next=tail_it_174;
                                      ^~~~~~~~~~~~
b.c.c:4098:34: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                tail_it_174->prev=head_prev_it_173;
                                 ^~~~~~~~~~~~~~~~~
b.c.c:4108:23: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                it_164=self->head;
                      ^~~~~~~~~~~
b.c.c:4111:27: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                    it_164=it_164->next;
                          ^~~~~~~~~~~~~
b.c.c:4138:23: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
            self->tail=litem_178;
                      ^~~~~~~~~~
b.c.c:4139:23: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
            self->head=litem_178;
                      ^~~~~~~~~~
b.c.c:4147:23: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
            self->tail=litem_179;
                      ^~~~~~~~~~
b.c.c:4148:29: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
            self->head->next=litem_179;
                            ^~~~~~~~~~
b.c.c:4156:29: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
            self->tail->next=litem_180;
                            ^~~~~~~~~~
b.c.c:4157:23: warning: incompatible pointer types assigning to 'struct list_item$p$1char$ph *' from 'struct list_item$$1char$ph$$1char$ph *' [-Wincompatible-pointer-types]
            self->tail=litem_180;
                      ^~~~~~~~~~
b.c.c:4136:34: warning: expression result unused [-Wunused-value]
            if(litem_178->item) {(char*)come_decrement_ref_count(litem_178->item,0,0); }
                                 ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:4145:34: warning: expression result unused [-Wunused-value]
            if(litem_179->item) {(char*)come_decrement_ref_count(litem_179->item,0,0); }
                                 ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:4154:34: warning: expression result unused [-Wunused-value]
            if(litem_180->item) {(char*)come_decrement_ref_count(litem_180->item,0,0); }
                                 ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:4171:15: warning: incompatible pointer types assigning to 'struct list_item$$1char$ph$$1char$ph *' from 'struct list_item$p$1char$ph *' [-Wincompatible-pointer-types]
        it_181=self->head;
              ^~~~~~~~~~~
b.c.c:4179:19: warning: incompatible pointer types assigning to 'struct list_item$$1char$ph$$1char$ph *' from 'struct list_item$p$1char$ph *' [-Wincompatible-pointer-types]
            it_181=it_181->next;
                  ^~~~~~~~~~~~~
b.c.c:4175:35: warning: expression result unused [-Wunused-value]
                if(it_181->item) {(char*)come_decrement_ref_count(it_181->item,0,0); }
                                  ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:4193:15: warning: incompatible pointer types assigning to 'struct list_item$$1char$ph$$1char$ph *' from 'struct list_item$p$1char$ph *' [-Wincompatible-pointer-types]
        it_183=self->head;
              ^~~~~~~~~~~
b.c.c:4200:19: warning: incompatible pointer types assigning to 'struct list_item$$1char$ph$$1char$ph *' from 'struct list_item$p$1char$ph *' [-Wincompatible-pointer-types]
            it_183=it_183->next;
                  ^~~~~~~~~~~~~
b.c.c:4222:23: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->tail=litem_186;
                      ^~~~~~~~~~
b.c.c:4223:23: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->head=litem_186;
                      ^~~~~~~~~~
b.c.c:4230:23: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->tail=litem_187;
                      ^~~~~~~~~~
b.c.c:4231:29: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->head->next=litem_187;
                            ^~~~~~~~~~
b.c.c:4238:29: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->tail->next=litem_188;
                            ^~~~~~~~~~
b.c.c:4239:23: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
            self->tail=litem_188;
                      ^~~~~~~~~~
b.c.c:4253:15: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
        it_190=left->head;
              ^~~~~~~~~~~
b.c.c:4254:16: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
        it2_191=right->head;
               ^~~~~~~~~~~~
b.c.c:4260:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_190=it_190->next;
                  ^~~~~~~~~~~~~
b.c.c:4261:20: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it2_191=it2_191->next;
                   ^~~~~~~~~~~~~~
b.c.c:4273:15: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
        it_193=self->head;
              ^~~~~~~~~~~
b.c.c:4280:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_193=it_193->next;
                  ^~~~~~~~~~~~~
b.c.c:4295:143: warning: incompatible pointer types passing 'struct list$$1int$$$1int$ *' to parameter of type 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
        result_195=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value128=list$$1int$$$1int$phint_initialize((struct list$$1int$$$1int$*)come_increment_ref_count(((struct list$$1int$$$1int$*)(right_value127=(struct list$$1int$$$1int$*)come_calloc(1, sizeof(struct list$$1int$$$1int$)*(1)))))))));
                                                                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1352:87: note: passing argument to parameter 'self' here
static struct list$ph$1int$* list$$1int$$$1int$phint_initialize(struct list$ph$1int$* self);
                                                                                      ^
b.c.c:4295:19: warning: incompatible pointer types assigning to 'struct list$$1int$$$1int$ *' from 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
        result_195=(struct list$ph$1int$*)come_increment_ref_count(((struct list$ph$1int$*)(right_value128=list$$1int$$$1int$phint_initialize((struct list$$1int$$$1int$*)come_increment_ref_count(((struct list$$1int$$$1int$*)(right_value127=(struct list$$1int$$$1int$*)come_calloc(1, sizeof(struct list$$1int$$$1int$)*(1)))))))));
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:4310:15: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
        it_200=self->head;
              ^~~~~~~~~~~
b.c.c:4314:51: warning: incompatible pointer types passing 'struct list$$1int$$$1int$ *' to parameter of type 'struct list$p$1int$ *' [-Wincompatible-pointer-types]
                list$$1int$$$1int$phint_push_back(result_195,it_200->item);
                                                  ^~~~~~~~~~
b.c.c:1355:68: note: passing argument to parameter 'self' here
static void list$$1int$$$1int$phint_push_back(struct list$p$1int$* self, int item);
                                                                   ^
b.c.c:4316:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_200=it_200->next;
                  ^~~~~~~~~~~~~
b.c.c:4321:16: warning: incompatible pointer types returning 'struct list$$1int$$$1int$ *' from a function with result type 'struct list$ph$1int$ *' [-Wincompatible-pointer-types]
        return __result__;
               ^~~~~~~~~~
b.c.c:4338:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_196=self->head;
                  ^~~~~~~~~~~
b.c.c:4343:23: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                it_196=it_196->next;
                      ^~~~~~~~~~~~~
b.c.c:4353:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_198=self->head;
                  ^~~~~~~~~~~
b.c.c:4358:23: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                it_198=it_198->next;
                      ^~~~~~~~~~~~~
b.c.c:4378:35: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                        self->tail=litem_202;
                                  ^~~~~~~~~~
b.c.c:4379:35: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                        self->head=litem_202;
                                  ^~~~~~~~~~
b.c.c:4386:35: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                        self->tail=litem_203;
                                  ^~~~~~~~~~
b.c.c:4387:41: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                        self->head->next=litem_203;
                                        ^~~~~~~~~~
b.c.c:4394:41: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                        self->tail->next=litem_204;
                                        ^~~~~~~~~~
b.c.c:4395:35: warning: incompatible pointer types assigning to 'struct list_item$p$1int$ *' from 'struct list_item$$1int$$$1int$ *' [-Wincompatible-pointer-types]
                        self->tail=litem_204;
                                  ^~~~~~~~~~
b.c.c:4416:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_208=self->head;
                  ^~~~~~~~~~~
b.c.c:4423:23: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                it_208=it_208->next;
                      ^~~~~~~~~~~~~
b.c.c:4444:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_211=self->head;
                  ^~~~~~~~~~~
b.c.c:4451:23: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                it_211=it_211->next;
                      ^~~~~~~~~~~~~
b.c.c:4472:19: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it_214=left->head;
                  ^~~~~~~~~~~
b.c.c:4473:20: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
            it2_215=right->head;
                   ^~~~~~~~~~~~
b.c.c:4479:23: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                it_214=it_214->next;
                      ^~~~~~~~~~~~~
b.c.c:4480:24: warning: incompatible pointer types assigning to 'struct list_item$$1int$$$1int$ *' from 'struct list_item$p$1int$ *' [-Wincompatible-pointer-types]
                it2_215=it2_215->next;
                       ^~~~~~~~~~~~~~
b.c.c:4498:19: warning: incompatible pointer types assigning to 'char **' from 'char ***'; dereference with * [-Wincompatible-pointer-types]
        self->keys=((char***)(right_value149=(char***)come_calloc(1, sizeof(char**)*(1*(128)))));
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                   *(                                                                           )
b.c.c:4499:20: warning: incompatible pointer types assigning to 'int *' from 'int **'; dereference with * [-Wincompatible-pointer-types]
        self->items=((int**)(right_value150=(int**)come_calloc(1, sizeof(int*)*(1*(128)))));
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    *(                                                                     )
b.c.c:4500:29: warning: incompatible pointer types assigning to '_Bool *' from '_Bool **'; dereference with * [-Wincompatible-pointer-types]
        self->item_existance=((_Bool**)(right_value151=(_Bool**)come_calloc(1, sizeof(_Bool*)*(1*(128)))));
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                             *(                                                                           )
b.c.c:4511:148: warning: incompatible pointer types passing 'struct list$$1char$p *' to parameter of type 'struct list$ph$1char$p *' [-Wincompatible-pointer-types]
        self->key_list=(struct list$ph$1char$p*)come_increment_ref_count(((struct list$ph$1char$p*)(right_value153=list$$1char$pphcharp_initialize((struct list$$1char$p*)come_increment_ref_count(((struct list$$1char$p*)(right_value152=(struct list$$1char$p*)come_calloc(1, sizeof(struct list$$1char$p)*(1)))))))));
                                                                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1365:88: note: passing argument to parameter 'self' here
static struct list$ph$1char$p* list$$1char$pphcharp_initialize(struct list$ph$1char$p* self);
                                                                                       ^
b.c.c:4510:29: warning: expression result unused [-Wunused-value]
        if(self->key_list) {(struct list$ph$1char$p*)come_decrement_ref_count(self->key_list,0,0); }
                            ^                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:4534:23: warning: incompatible pointer types assigning to 'struct list_item$$1char$p *' from 'struct list_item$p$1char$p *' [-Wincompatible-pointer-types]
                it_220=self->head;
                      ^~~~~~~~~~~
b.c.c:4540:27: warning: incompatible pointer types assigning to 'struct list_item$$1char$p *' from 'struct list_item$p$1char$p *' [-Wincompatible-pointer-types]
                    it_220=it_220->next;
                          ^~~~~~~~~~~~~
b.c.c:4550:19: warning: incompatible pointer types assigning to 'struct list_item$$1char$p$$1char$p *' from 'struct list_item$p$1char$p *' [-Wincompatible-pointer-types]
            it_222=self->head;
                  ^~~~~~~~~~~
b.c.c:4556:23: warning: incompatible pointer types assigning to 'struct list_item$$1char$p$$1char$p *' from 'struct list_item$p$1char$p *' [-Wincompatible-pointer-types]
                it_222=it_222->next;
                      ^~~~~~~~~~~~~
b.c.c:4566:19: warning: incompatible pointer types assigning to 'struct list_item$$1char$p$$1char$p *' from 'struct list_item$p$1char$p *' [-Wincompatible-pointer-types]
            it_224=self->head;
                  ^~~~~~~~~~~
b.c.c:4572:23: warning: incompatible pointer types assigning to 'struct list_item$$1char$p$$1char$p *' from 'struct list_item$p$1char$p *' [-Wincompatible-pointer-types]
                it_224=it_224->next;
                      ^~~~~~~~~~~~~
b.c.c:4614:23: warning: incompatible pointer types assigning to 'struct list_item$$1char$p$$1char$p *' from 'struct list_item$p$1char$p *' [-Wincompatible-pointer-types]
                it_228=self->head;
                      ^~~~~~~~~~~
b.c.c:4620:27: warning: incompatible pointer types assigning to 'struct list_item$$1char$p$$1char$p *' from 'struct list_item$p$1char$p *' [-Wincompatible-pointer-types]
                    it_228=it_228->next;
                          ^~~~~~~~~~~~~
b.c.c:4719:57: warning: incompatible pointer types passing 'struct list$ph$1char$p *' to parameter of type 'struct list$p$1char$p *' [-Wincompatible-pointer-types]
        it2_252=list$ph$1char$p$ph$1char$pphcharp_begin(self->key_list);
                                                        ^~~~~~~~~~~~~~
b.c.c:1378:77: note: passing argument to parameter 'self' here
static char* list$ph$1char$p$ph$1char$pphcharp_begin(struct list$p$1char$p* self);
                                                                            ^
b.c.c:4720:48: warning: incompatible pointer types passing 'struct list$ph$1char$p *' to parameter of type 'struct list$p$1char$p *' [-Wincompatible-pointer-types]
        !list$ph$1char$p$ph$1char$pphcharp_end(self->key_list);
                                               ^~~~~~~~~~~~~~
b.c.c:1379:75: note: passing argument to parameter 'self' here
static _Bool list$ph$1char$p$ph$1char$pphcharp_end(struct list$p$1char$p* self);
                                                                          ^
b.c.c:4721:55: warning: incompatible pointer types passing 'struct list$ph$1char$p *' to parameter of type 'struct list$p$1char$p *' [-Wincompatible-pointer-types]
        it_249=list$ph$1char$p$ph$1char$pphcharp_next(self->key_list)
                                                      ^~~~~~~~~~~~~~
b.c.c:1380:76: note: passing argument to parameter 'self' here
static char* list$ph$1char$p$ph$1char$pphcharp_next(struct list$p$1char$p* self);
                                                                           ^
b.c.c:4721:15: warning: incompatible pointer to integer conversion assigning to 'int' from 'char *' [-Wint-conversion]
        it_249=list$ph$1char$p$ph$1char$pphcharp_next(self->key_list)
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:4728:57: warning: incompatible pointer types passing 'struct list$ph$1char$p *' to parameter of type 'struct list$p$1char$p *' [-Wincompatible-pointer-types]
            list$ph$1char$p$ph$1char$pphcharp_push_back(self->key_list,key);
                                                        ^~~~~~~~~~~~~~
b.c.c:1381:80: note: passing argument to parameter 'self' here
static void list$ph$1char$p$ph$1char$pphcharp_push_back(struct list$p$1char$p* self, char* item);
                                                                               ^
b.c.c:4759:25: warning: incompatible pointer types assigning to 'char **' from 'char ***'; dereference with * [-Wincompatible-pointer-types]
                keys_234=((char***)(right_value155=(char***)come_calloc(1, sizeof(char**)*(1*(size_233)))));
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         *(                                                                                )
b.c.c:4760:26: warning: incompatible pointer types assigning to 'int *' from 'int **'; dereference with * [-Wincompatible-pointer-types]
                items_235=((int**)(right_value156=(int**)come_calloc(1, sizeof(int*)*(1*(size_233)))));
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                          *(                                                                          )
b.c.c:4761:35: warning: incompatible pointer types assigning to '_Bool *' from '_Bool **'; dereference with * [-Wincompatible-pointer-types]
                item_existance_236=((_Bool**)(right_value157=(_Bool**)come_calloc(1, sizeof(_Bool*)*(1*(size_233)))));
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                   *(                                                                                )
b.c.c:4815:49: warning: incompatible integer to pointer conversion initializing 'struct list_item$p$1char$p *' with an expression of type 'int' [-Wint-conversion]
                    struct list_item$p$1char$p* __result__ = self->key_list->it==((void*)0);
                                                ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:4877:41: warning: incompatible integer to pointer conversion initializing 'struct list_item$p$1char$p *' with an expression of type 'int' [-Wint-conversion]
            struct list_item$p$1char$p* __result__ = self->it==((void*)0);
                                        ^            ~~~~~~~~~~~~~~~~~~~~
b.c.c:4909:31: warning: incompatible pointer types assigning to 'struct list_item$p$1char$p *' from 'struct list_item$$1char$p$$1char$p *' [-Wincompatible-pointer-types]
                    self->tail=litem_254;
                              ^~~~~~~~~~
b.c.c:4910:31: warning: incompatible pointer types assigning to 'struct list_item$p$1char$p *' from 'struct list_item$$1char$p$$1char$p *' [-Wincompatible-pointer-types]
                    self->head=litem_254;
                              ^~~~~~~~~~
b.c.c:4917:31: warning: incompatible pointer types assigning to 'struct list_item$p$1char$p *' from 'struct list_item$$1char$p$$1char$p *' [-Wincompatible-pointer-types]
                    self->tail=litem_255;
                              ^~~~~~~~~~
b.c.c:4918:37: warning: incompatible pointer types assigning to 'struct list_item$p$1char$p *' from 'struct list_item$$1char$p$$1char$p *' [-Wincompatible-pointer-types]
                    self->head->next=litem_255;
                                    ^~~~~~~~~~
b.c.c:4925:37: warning: incompatible pointer types assigning to 'struct list_item$p$1char$p *' from 'struct list_item$$1char$p$$1char$p *' [-Wincompatible-pointer-types]
                    self->tail->next=litem_256;
                                    ^~~~~~~~~~
b.c.c:4926:31: warning: incompatible pointer types assigning to 'struct list_item$p$1char$p *' from 'struct list_item$$1char$p$$1char$p *' [-Wincompatible-pointer-types]
                    self->tail=litem_256;
                              ^~~~~~~~~~
b.c.c:4985:169: warning: incompatible pointer types passing 'struct map$$2char$pint$$$2char$pint$ *' to parameter of type 'struct map$ph$2char$pint$ *' [-Wincompatible-pointer-types]
        result_265=(struct map$ph$2char$pint$*)come_increment_ref_count(((struct map$ph$2char$pint$*)(right_value169=map$$2char$pint$$$2char$pint$phcharpint_initialize((struct map$$2char$pint$$$2char$pint$*)come_increment_ref_count(((struct map$$2char$pint$$$2char$pint$*)(right_value163=(struct map$$2char$pint$$$2char$pint$*)come_calloc(1, sizeof(struct map$$2char$pint$$$2char$pint$)*(1)))))))));
                                                                                                                                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1385:113: note: passing argument to parameter 'self' here
static struct map$ph$2char$pint$* map$$2char$pint$$$2char$pint$phcharpint_initialize(struct map$ph$2char$pint$* self);
                                                                                                                ^
b.c.c:4994:65: warning: incompatible pointer types passing 'struct map$ph$2char$pint$ *' to parameter of type 'struct map$p$2char$pint$ *' [-Wincompatible-pointer-types]
            map$ph$2char$pint$$ph$2char$pint$phcharpint_insert2(result_265,charp_clone(it_270),int_clone(it2_272));
                                                                ^~~~~~~~~~
b.c.c:1390:91: note: passing argument to parameter 'self' here
static void map$ph$2char$pint$$ph$2char$pint$phcharpint_insert2(struct map$p$2char$pint$* self, char* key, int item);
                                                                                          ^
b.c.c:5009:23: warning: incompatible pointer types assigning to 'char **' from 'char ***'; dereference with * [-Wincompatible-pointer-types]
            self->keys=((char***)(right_value164=(char***)come_calloc(1, sizeof(char**)*(1*(128)))));
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       *(                                                                           )
b.c.c:5010:24: warning: incompatible pointer types assigning to 'int *' from 'int **'; dereference with * [-Wincompatible-pointer-types]
            self->items=((int**)(right_value165=(int**)come_calloc(1, sizeof(int*)*(1*(128)))));
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                        *(                                                                     )
b.c.c:5011:33: warning: incompatible pointer types assigning to '_Bool *' from '_Bool **'; dereference with * [-Wincompatible-pointer-types]
            self->item_existance=((_Bool**)(right_value166=(_Bool**)come_calloc(1, sizeof(_Bool*)*(1*(128)))));
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                 *(                                                                           )
b.c.c:5022:161: warning: incompatible pointer types passing 'struct list$$1char$p$$1char$p *' to parameter of type 'struct list$ph$1char$p *' [-Wincompatible-pointer-types]
            self->key_list=(struct list$ph$1char$p*)come_increment_ref_count(((struct list$ph$1char$p*)(right_value168=list$$1char$p$$1char$pphcharp_initialize((struct list$$1char$p$$1char$p*)come_increment_ref_count(((struct list$$1char$p$$1char$p*)(right_value167=(struct list$$1char$p$$1char$p*)come_calloc(1, sizeof(struct list$$1char$p$$1char$p)*(1)))))))));
                                                                                                                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:1386:97: note: passing argument to parameter 'self' here
static struct list$ph$1char$p* list$$1char$p$$1char$pphcharp_initialize(struct list$ph$1char$p* self);
                                                                                                ^
b.c.c:5021:33: warning: expression result unused [-Wunused-value]
            if(self->key_list) {(struct list$ph$1char$p*)come_decrement_ref_count(self->key_list,0,0); }
                                ^                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:5045:23: warning: incompatible pointer types assigning to 'struct list_item$$1char$p$$1char$p *' from 'struct list_item$p$1char$p *' [-Wincompatible-pointer-types]
                it_263=self->head;
                      ^~~~~~~~~~~
b.c.c:5051:27: warning: incompatible pointer types assigning to 'struct list_item$$1char$p$$1char$p *' from 'struct list_item$p$1char$p *' [-Wincompatible-pointer-types]
                    it_263=it_263->next;
                          ^~~~~~~~~~~~~
b.c.c:5182:65: warning: incompatible pointer types passing 'struct list$ph$1char$p *' to parameter of type 'struct list$p$1char$p *' [-Wincompatible-pointer-types]
                it2_276=list$ph$1char$p$ph$1char$pphcharp_begin(self->key_list);
                                                                ^~~~~~~~~~~~~~
b.c.c:4863:77: note: passing argument to parameter 'self' here
static char* list$ph$1char$p$ph$1char$pphcharp_begin(struct list$p$1char$p* self){
                                                                            ^
b.c.c:5183:56: warning: incompatible pointer types passing 'struct list$ph$1char$p *' to parameter of type 'struct list$p$1char$p *' [-Wincompatible-pointer-types]
                !list$ph$1char$p$ph$1char$pphcharp_end(self->key_list);
                                                       ^~~~~~~~~~~~~~
b.c.c:4876:75: note: passing argument to parameter 'self' here
static _Bool list$ph$1char$p$ph$1char$pphcharp_end(struct list$p$1char$p* self){
                                                                          ^
b.c.c:5184:63: warning: incompatible pointer types passing 'struct list$ph$1char$p *' to parameter of type 'struct list$p$1char$p *' [-Wincompatible-pointer-types]
                it_274=list$ph$1char$p$ph$1char$pphcharp_next(self->key_list)
                                                              ^~~~~~~~~~~~~~
b.c.c:4881:76: note: passing argument to parameter 'self' here
static char* list$ph$1char$p$ph$1char$pphcharp_next(struct list$p$1char$p* self){
                                                                           ^
b.c.c:5184:23: warning: incompatible pointer to integer conversion assigning to 'int' from 'char *' [-Wint-conversion]
                it_274=list$ph$1char$p$ph$1char$pphcharp_next(self->key_list)
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:5191:65: warning: incompatible pointer types passing 'struct list$ph$1char$p *' to parameter of type 'struct list$p$1char$p *' [-Wincompatible-pointer-types]
                    list$ph$1char$p$ph$1char$pphcharp_push_back(self->key_list,key);
                                                                ^~~~~~~~~~~~~~
b.c.c:4894:80: note: passing argument to parameter 'self' here
static void list$ph$1char$p$ph$1char$pphcharp_push_back(struct list$p$1char$p* self, char* item){
                                                                               ^
b.c.c:5224:60: warning: incompatible pointer types passing 'struct list$ph$1char$p *' to parameter of type 'struct list$p$1char$p *' [-Wincompatible-pointer-types]
            it_280=list$ph$1char$p$ph$1char$pphcharp_begin(left->key_list);
                                                           ^~~~~~~~~~~~~~
b.c.c:4863:77: note: passing argument to parameter 'self' here
static char* list$ph$1char$p$ph$1char$pphcharp_begin(struct list$p$1char$p* self){
                                                                            ^
b.c.c:5225:52: warning: incompatible pointer types passing 'struct list$ph$1char$p *' to parameter of type 'struct list$p$1char$p *' [-Wincompatible-pointer-types]
            !list$ph$1char$p$ph$1char$pphcharp_end(left->key_list);
                                                   ^~~~~~~~~~~~~~
b.c.c:4876:75: note: passing argument to parameter 'self' here
static _Bool list$ph$1char$p$ph$1char$pphcharp_end(struct list$p$1char$p* self){
                                                                          ^
b.c.c:5226:59: warning: incompatible pointer types passing 'struct list$ph$1char$p *' to parameter of type 'struct list$p$1char$p *' [-Wincompatible-pointer-types]
            it_280=list$ph$1char$p$ph$1char$pphcharp_next(left->key_list)
                                                          ^~~~~~~~~~~~~~
b.c.c:4881:76: note: passing argument to parameter 'self' here
static char* list$ph$1char$p$ph$1char$pphcharp_next(struct list$p$1char$p* self){
                                                                           ^
b.c.c:5228:64: warning: incompatible pointer types passing 'struct list$ph$1char$p *' to parameter of type 'struct list$p$1char$p *' [-Wincompatible-pointer-types]
                it2_284=list$ph$1char$p$ph$1char$pphcharp_item(right->key_list,n_278,default_value_281);
                                                               ^~~~~~~~~~~~~~~
b.c.c:1393:76: note: passing argument to parameter 'self' here
static char* list$ph$1char$p$ph$1char$pphcharp_item(struct list$p$1char$p* self, int position, char* default_value);
                                                                           ^
b.c.c:5253:27: warning: incompatible pointer types assigning to 'struct list_item$$1char$p$$1char$p *' from 'struct list_item$p$1char$p *' [-Wincompatible-pointer-types]
                    it_282=self->head;
                          ^~~~~~~~~~~
b.c.c:5260:31: warning: incompatible pointer types assigning to 'struct list_item$$1char$p$$1char$p *' from 'struct list_item$p$1char$p *' [-Wincompatible-pointer-types]
                        it_282=it_282->next;
                              ^~~~~~~~~~~~~
b.c.c:5281:23: warning: expression result unused [-Wunused-value]
        if(self->v1) {(char*)come_decrement_ref_count(self->v1,0,0); }
                      ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:5308:33: warning: expression result unused [-Wunused-value]
            if(result_292->v1) {(char*)come_decrement_ref_count(result_292->v1,0,0); }
                                ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:5341:23: warning: expression result unused [-Wunused-value]
        if(self->v1) {(char*)come_decrement_ref_count(self->v1,0,0); }
                      ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:5432:19: warning: incompatible pointer types assigning to 'struct list_item$$1IA$ph *' from 'struct list_item$p$1IA$ph *' [-Wincompatible-pointer-types]
            it_305=self->head;
                  ^~~~~~~~~~~
b.c.c:5439:23: warning: incompatible pointer types assigning to 'struct list_item$$1IA$ph *' from 'struct list_item$p$1IA$ph *' [-Wincompatible-pointer-types]
                it_305=it_305->next;
                      ^~~~~~~~~~~~~
b.c.c:5449:15: warning: incompatible pointer types assigning to 'struct list_item$$1IA$ph$$1IA$ph *' from 'struct list_item$p$1IA$ph *' [-Wincompatible-pointer-types]
        it_308=self->head;
              ^~~~~~~~~~~
b.c.c:5456:19: warning: incompatible pointer types assigning to 'struct list_item$$1IA$ph$$1IA$ph *' from 'struct list_item$p$1IA$ph *' [-Wincompatible-pointer-types]
            it_308=it_308->next;
                  ^~~~~~~~~~~~~
b.c.c:5479:25: warning: incompatible pointer types assigning to 'struct IA **' from 'struct IA *' [-Wincompatible-pointer-types]
            _inf_valueX2=(struct IA*)come_increment_ref_count(item);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:5481:28: warning: incompatible pointer types assigning to 'struct IA *' from 'struct IA **'; dereference with * [-Wincompatible-pointer-types]
            litem_310->item=_inf_valueX2;
                           ^~~~~~~~~~~~~
                            *
b.c.c:5482:23: warning: incompatible pointer types assigning to 'struct list_item$p$1IA$ph *' from 'struct list_item$$1IA$ph$$1IA$ph *' [-Wincompatible-pointer-types]
            self->tail=litem_310;
                      ^~~~~~~~~~
b.c.c:5483:23: warning: incompatible pointer types assigning to 'struct list_item$p$1IA$ph *' from 'struct list_item$$1IA$ph$$1IA$ph *' [-Wincompatible-pointer-types]
            self->head=litem_310;
                      ^~~~~~~~~~
b.c.c:5490:25: warning: incompatible pointer types assigning to 'struct IA **' from 'struct IA *' [-Wincompatible-pointer-types]
            _inf_valueX3=(struct IA*)come_increment_ref_count(item);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:5492:28: warning: incompatible pointer types assigning to 'struct IA *' from 'struct IA **'; dereference with * [-Wincompatible-pointer-types]
            litem_311->item=_inf_valueX3;
                           ^~~~~~~~~~~~~
                            *
b.c.c:5493:23: warning: incompatible pointer types assigning to 'struct list_item$p$1IA$ph *' from 'struct list_item$$1IA$ph$$1IA$ph *' [-Wincompatible-pointer-types]
            self->tail=litem_311;
                      ^~~~~~~~~~
b.c.c:5494:29: warning: incompatible pointer types assigning to 'struct list_item$p$1IA$ph *' from 'struct list_item$$1IA$ph$$1IA$ph *' [-Wincompatible-pointer-types]
            self->head->next=litem_311;
                            ^~~~~~~~~~
b.c.c:5501:25: warning: incompatible pointer types assigning to 'struct IA **' from 'struct IA *' [-Wincompatible-pointer-types]
            _inf_valueX4=(struct IA*)come_increment_ref_count(item);
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:5503:28: warning: incompatible pointer types assigning to 'struct IA *' from 'struct IA **'; dereference with * [-Wincompatible-pointer-types]
            litem_312->item=_inf_valueX4;
                           ^~~~~~~~~~~~~
                            *
b.c.c:5504:29: warning: incompatible pointer types assigning to 'struct list_item$p$1IA$ph *' from 'struct list_item$$1IA$ph$$1IA$ph *' [-Wincompatible-pointer-types]
            self->tail->next=litem_312;
                            ^~~~~~~~~~
b.c.c:5505:23: warning: incompatible pointer types assigning to 'struct list_item$p$1IA$ph *' from 'struct list_item$$1IA$ph$$1IA$ph *' [-Wincompatible-pointer-types]
            self->tail=litem_312;
                      ^~~~~~~~~~
b.c.c:5478:34: warning: left operand of comma operator has no effect [-Wunused-value]
            if(litem_310->item) {(struct IA*)come_decrement_ref_count(litem_310->item,0,0), come_decrement_ref_count(((struct IA*)litem_310->item)->_protocol_obj,0,0); }
                                 ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:5489:34: warning: left operand of comma operator has no effect [-Wunused-value]
            if(litem_311->item) {(struct IA*)come_decrement_ref_count(litem_311->item,0,0), come_decrement_ref_count(((struct IA*)litem_311->item)->_protocol_obj,0,0); }
                                 ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:5500:34: warning: left operand of comma operator has no effect [-Wunused-value]
            if(litem_312->item) {(struct IA*)come_decrement_ref_count(litem_312->item,0,0), come_decrement_ref_count(((struct IA*)litem_312->item)->_protocol_obj,0,0); }
                                 ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b.c.c:5526:36: warning: incompatible integer to pointer conversion initializing 'struct list_item$p$1IA$ph *' with an expression of type 'int' [-Wint-conversion]
        struct list_item$p$1IA$ph* __result__ = self->it==((void*)0);
                                   ^            ~~~~~~~~~~~~~~~~~~~~
451 warnings and 2 errors generated.
b.c 214: clang is faield
b.c 214: compile faield
